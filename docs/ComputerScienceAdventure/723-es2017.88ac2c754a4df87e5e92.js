!function(){"use strict";function e(e,t,n,r,o,a,i){try{var s=e[a](i),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,a){var i=t.apply(n,r);function s(t){e(i,o,a,s,u,"next",t)}function u(t){e(i,o,a,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"GitHub Desktop"}getDescription(e){return"You have opened GitHub Desktop. Now all you need to do is [push] your commit if you have already\nsaved your commit in [VSCode]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("push"===r&&t.hasSaved)t.print("\nYou push your sign-on and now you're ready for class!\n"),t.gameWon();else if("push"!==r||t.hasSaved){if("vscode"===r)return t.print("\nYou close GitHub Desktop and open VSCode again.\n"),new o;t.print("\nInvalid Command!\n")}else t.print("\nYou haven't saved and committed your sign-on yet!\n");return n})()}}class o{getName(e){return"VSCode"}getDescription(e){return"You're on VSCode now. Make a [sign-on] for the beginning of class and\nthen [save] it once you're done and open [GitHub Desktop]."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("sign-on"===o)t.print("\nYou sign on to VSCode for the day with the date and what\nyou'll be working on, so now it's time to [save] and commit the sign on.\n"),t.hasMadeSignOn=!0;else if("save"===o&&t.hasMadeSignOn)t.print("\nYou save and commit your sign-on for the day. Now you should open\n[GitHub Desktop] to push the commit."),t.hasSaved=!0;else if("save"!==o||t.hasMadeSignOn){if("github desktop"===o)return t.print("\nYou open GitHub Desktop.\n"),new r;t.print("\nInvalid Command!\n")}else t.print("\nInvalid Command!\n");return n})()}}class a{getName(e){return"Github"}getDescription(e){return"You've opened the GitHub website. Now you need to [install] VSCode and GitHub Desktop\nto get started with Computer Science class."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("install"!==r||t.hasVSCode)if("install"===r&&t.hasVSCode)t.print("\nYou already have VSCode and GitHub Ddesktop installed.\n");else if("vscode"!==r||t.hasVSCode){if("vscode"===r&&t.hasVSCode)return t.print("\nYou open VSCode...\n"),new o;t.print("\nInvalid Command!\n")}else t.print("\nInvalid Command!\n");else t.print("\nYou download both GitHub and VSCode.\n"),t.hasVSCode=!0,t.print("You should open up [VSCode] and make a sign on now.");return n})()}}class i{getName(e){return"IT"}getDescription(e){return"This is the IT Department's room, you can either ask for a [loaner] laptop, or a [charger]."}handleInput(e){var n=this;return t(function*(){const t=e;t.hasLoggedIn||t.print("\nIf you don't need anything then go back to [class].\n");const r=(yield t.getInput()).toLowerCase().trim();if("loaner"!==r||t.hasLaptop)if("loaner"===r&&t.hasLaptop)t.print("\nYou already have a laptop, why do you need to borrow another?\n");else{if("charger"===r&&t.isLaptopdead)return t.print("\nYour laptop was magically charged completely within seconds!\n"),t.isLaptopdead=!1,new a;if("charger"!==r||t.isLaptopdead){if("class"===r)return t.print("\nYou head back to class.\n"),new l;t.print("\nInvalid Command!\n")}else t.print("\nYour laptop is already charged.\n")}else t.hasLoaner?"loaner"===r&&t.hasLoaner&&t.print("\nWhy do you need a second loaner?!\n"):(t.print("\nYou asked for a loaner since you forgot your laptop. You now have a computer!\n"),t.hasLoaner=!0);return n})()}}class s{getName(e){return"Classroom Again"}getDescription(e){return"You're in computer science class again and now your laptop has died. If you need help with \ntechnology, you should head to the [IT] room."}handleInput(e){var n=this;return t(function*(){const t=e;return"it"===(yield t.getInput()).toLowerCase().trim()?(t.print("\nYou go to the IT Department\n"),new i):(t.print("\nInvalid Command!\n"),n)})()}}class u{getName(e){return"Chrome"}getDescription(e){return"You're on Google Chrome now. To do any work you'll need to [log-in] with your password. Or you \ncan close Chrome and go back to the [desktop]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("desktop"===r)return t.print("\nYou closed Chrome and go back to the desktop.\n"),new p;if("log-in"!==r||t.hasKey)if("log-in"===r&&t.hasKey)t.print("\nYou log-in to Google with the key."),t.hasLoggedIn=!0,t.print("\nNow you can open [github].\n");else if("github"!==r||t.hasLoggedIn){if("github"===r&&t.hasLoggedIn)return t.print("\nYou finally open up GitHub. But wait! Your computer just went out!!!\n"),t.isLaptopdead=!0,new s;t.print("\nInvalid Command!\n")}else t.print("\nInvalid Command!\n");else t.print("\nYou've forgotten the password for Google. Maybe the key is around here\nsomewhere on your laptop.");return n})()}}class h{getName(e){return"Trash"}getDescription(e){return"This is your trash. If you don't need anything you should [close] the trash."}handleInput(e){var n=this;return t(function*(){const t=e;if(t.isChromeOpen&&t.hasLaptop)t.print("\nThe [key] to log-in to Google Chrome is here!");else if(t.isChromeOpen){if(t.hasKey)t.print("\nIt seems like there's nothing important in here.");else if(t.hasLoaner&&t.isChromeOpen)return t.print("\nThere's nothing in here... Your original laptop has the key!!\n"),t.gameOver(),n}else t.print("\nIt seems like there's nothing important in here.");const r=(yield t.getInput()).toLowerCase().trim();return"close"===r?(t.print("\nYou closed the trash and went back to your desktop.\n"),new p):("key"!==r||t.hasKey?t.print("key"===r&&t.hasKey?"\nYou already have the key.\n":"\nInvalid Command!\n"):(t.print("\nYou got the key to Chrome!\n"),t.hasKey=!0),n)})()}}class p{getName(e){return"Desktop"}getDescription(e){return"You are now on your desktop. To get started with class you should open [chrome],\nor if you are missing something important, try looking in the [trash]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"chrome"===r?(t.print("\nYou open up Google Chrome.\n"),t.isChromeOpen=!0,new u):"trash"===r?(t.print("\nYou open up the trash. Have fun!\n"),new h):(t.print("\nInvalid Command!\n"),n)})()}}class l{getName(e){return"Classroom"}getDescription(e){return"You're in computer science class and it's time to [open] up your laptop. If you need help with \ntechnology, you should head to the [IT] room."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("open"!==r||t.hasLaptop){if("open"===r&&t.hasLaptop)return t.print("\nYou open up the laptop you have and log in to it.\n"),new p;if("it"===r)return t.print("\nYou go to the IT Department\n"),new i;t.print("\nInvalid Command!\n")}else if(t.hasLoaner||t.print("\nYou forgot to bring your laptop to school...\n"),t.hasLoaner)return t.print("\nYou open up the laptop you have and log in to it.\n"),new p;return n})()}}class d{getName(e){return"Main Lawn"}getDescription(e){return"You're at school but class doesn't start for a few minutes. You should talk to your [friends]\nwhile you wait!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("friends"!==r||t.hasBrushedTeeth){if("friends"===r&&t.hasBrushedTeeth)return t.print("\nYou talk to your friends until 7:50 and then head to class.\n"),new l;t.print("\nInvalid Command!\n")}else t.print("\nYou talk to your friends but they die because of your terrible smelling breath...\n"),t.gameOver();return n})()}}class c{getName(e){return"Home"}getDescription(e){return"You are currently at home and you need to get ready for school.\nYou should [brush] your teeth, grab your [laptop], and then [leave].\nOr you can just go back to [sleep] and skip school..."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("sleep"===r)t.print("\nYou went back to sleep and missed school...\n"),t.gameOver();else{if("leave"===r)return t.print("\nYou left and went to school.\n"),new d;"laptop"!==r||t.hasLaptop?"laptop"===r&&t.hasLaptop?t.print("\nYou already have your computer.\n"):"brush"!==r||t.hasBrushedTeeth?t.print("brush"===r&&t.hasBrushedTeeth?"\nYou brushed your teeth, again!\n":"\nInvalid Command!\n"):(t.print("\nYou brushed your teeth!\n"),t.hasBrushedTeeth=!0):(t.print("\nYou put your computer in your backpack.\n"),t.hasLaptop=!0)}return n})()}}class g extends n{constructor(){super(...arguments),this.hasLoaner=!1,this.hasBrushedTeeth=!1,this.isLaptopdead=!1,this.hasLaptop=!1,this.isChromeOpen=!1,this.hasKey=!1,this.hasLoggedIn=!1,this.hasVSCode=!1,this.hasMadeSignOn=!1,this.hasSaved=!1}getName(){return"Computer Science"}getAuthor(){return"Chad Sawyer"}getDescription(){return"It's time for Computer Science class."}onStart(){var e=this;return t(function*(){return e.hasLoaner=!1,e.hasBrushedTeeth=!1,e.isLaptopdead=!1,e.hasLaptop=!1,e.isChromeOpen=!1,e.hasKey=!1,e.hasLoggedIn=!1,e.hasVSCode=!1,e.hasMadeSignOn=!1,e.hasSaved=!1,yield e.printTextFile("compsciadventure/title.txt"),e.print("\n                                  A text adventure by Chad Sawyer\n"),e.sleep(.5),e.print("\nAfter a good night's sleep, you wake up on a Friday morning..\n\n"),e.sleep(.5),e.print("School starts at 7:55 and your first period is C Period.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new c})()}}class m{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new I;t.print("Invalid command!\n")}return n})()}}class y{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new v;t.print("Invalid command!\n")}return n})()}}class f{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new w):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class w{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new f;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new v;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class v{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new y):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new w):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new I):(e.print("Invalid command!\n"),n)})()}}class I{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"right"===r?(t.print("You take the path to the right.\n"),new v):"left"===r?(t.print("You take the path to the left.\n"),new m):"entrance"===r?(t.print("On second thought, you return to the entrance.\n"),new b):(t.print("Invalid Command!\n"),n)})()}}class b{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new I):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class k extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new b})()}}class Y{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("back"===r)return t.print("\nSeeing no way forward, you return to the subway platform.\n"),new C;if("goat"===r){if(t.print("\nThere is an angry looking goat blocking the escalator.\n"),t.print("\nThe goat looks very [hungry]. BAAAA!\n"),t.isGoatOnFire&&t.print("\nThe goat is on [fire].\n"),!t.isGoatOnFire)return n}else"fire"===r&&t.isGoatOnFire?t.hasSpryte&&(t.print("\nYou take the Spryte from your pocket and pour it over the goat. The flames go out.\n"),t.isGoatOnFire=!1,t.hasSpryte||t.print("\nYep! That's a fire!\n")):"fire"!==r||t.isGoatOnFire?"hungry"===r&&t.isGoatOnFire?t.print("\nThe goat is on fire. Perhaps you should find a way to put it out.\n"):"hungry"!==r||t.isGoatOnFire?t.print("\nInvalid command!\n"):(t.print("\nThe goat looks quite hungry. You hand it the empty Spryte can. The goat crunches through it in a\nmatter of seconds. it 'BAAAAS' happily before hopping away. You continue up the broken escalator\nand return home. Did that really happen?\n"),t.gameWon()):t.print("\nNo fire here!\n");return n})()}}class C{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new Y;"machine"===r?t.print("\nOh wow! It's one of those cool new Spryte machines. It has a [coin] slot.\n"):"coin"===r&&!1===t.hasSpryte?(t.print("\nYou drop 4 coins into the vending machine. You hear a loud whirring sound followed by a loud\n*KA-CHUNK*. You reach down and pickup a Spryte.\n"),t.hasSpryte=!0):t.print("coin"===r&&!0===t.hasSpryte?"\nYou already have a Spryte.\n":"\nInvalid command.\n")}return n})()}}class T extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new C})()}}const L=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new k),e.push(new T),e}getAdventure(){return new g}};class S{constructor(e){this.TYPE="PrintMessage",this.message=e}}class D{constructor(){this.TYPE="PickAdventureMessage"}}const A=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,a="assets/"+e;o.addEventListener("load",i=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${a}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",a),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new S(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=L.SINGLE_ADVENTURE_MODE?L.getAdventure():L.getAdventures()[e.index];t.setEngine(A),console.log("Starting PrintThread."),A.startPrintThread(),console.log("Starting adventure."),t.run(),L.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new D))}else"InputMessage"==e.TYPE?A.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
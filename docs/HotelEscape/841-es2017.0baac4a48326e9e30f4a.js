!function(){"use strict";function e(e,t,n,r,o,a,i){try{var s=e[a](i),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,a){var i=t.apply(n,r);function s(t){e(i,o,a,s,u,"next",t)}function u(t){e(i,o,a,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new u;t.print("Invalid command!\n")}return n})()}}class o{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new s;t.print("Invalid command!\n")}return n})()}}class a{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new i):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class i{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new a;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new s;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class s{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new o):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new i):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new u):(e.print("Invalid command!\n"),n)})()}}class u{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"right"===o?(t.print("You take the path to the right.\n"),new s):"left"===o?(t.print("You take the path to the left.\n"),new r):"entrance"===o?(t.print("On second thought, you return to the entrance.\n"),new h):(t.print("Invalid Command!\n"),n)})()}}class h{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new u):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class l extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new h})()}}class d{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("\nSeeing no way forward, you return to the subway platform.\n"),new p):("goat"===r?(t.print("\nThere is an angry looking goat blocking the escalator.\n"),t.print("\nThe goat looks very [hungry]. BAAAAA!\n"),t.isGoatOnFire&&t.print("\nThe goat is on [fire].\n")):"fire"===r&&t.isGoatOnFire?t.hasSpryte?(t.print("\nYou take the Spryte from your pocket and pour it over the goat. The flames go out.\n"),t.isGoatOnFire=!1):t.print("\nYep! That's a fire!\n"):"fire"!==r||t.isGoatOnFire?"hungry"===r&&t.isGoatOnFire?t.print("\nThe goat is on fire. Perhaps you should fire a way to put it out.\n"):"hungry"!==r||t.isGoatOnFire?t.print("\nInvalid command!"):(t.print("\nThe goat looks quite hungry. You hand it the empty Spryte can. The goat crunches through it in a matter of seconds. It 'BAAAAS' happily before hopping away. You continue up the broken escalator and return home. Did that really happen?\n"),t.gameWon()):t.print("\nNo fire here!\n"),n)})()}}class p{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new d;"machine"===r?t.print("\nOh wow! It's one of those cool new Spryte machines. It has a [coin] slot.\n"):"coin"===r&&!1===t.hasSpryte?(t.print("\nYou drop 4 coints into the vending machine. You hear a loud whirring sound followed by a loud *KA-CHUNK*. You reach down and pick up a Spryte.\n"),t.hasSpryte=!0):t.print("coin"===r&&t.hasSpryte?"\nYou already have a Spryte\n":"\nInvalid command!")}return n})()}}class c extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new p})()}}class g{getName(e){return"Electrical Room"}getDescription(e){return"This is an open electrical room. As you oberved all the wires on the wall, you see a very \nsuspicious [closet] that seems to have something in there. You also see a [table] in the corner.\nAfter observing, you can head [back]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("table"===r)!1===t.hasCard?(t.print("\nYou took the staff card left on the table.\n"),t.hasCard=!0):!0===t.hasCard&&t.print("\nYou already have the staff card in your pocket.\n");else if("closet"===r)t.print("\nThis is a trap. HAHAHAHA! Happy death day!\n"),t.gameOver();else{if("back"===r)return t.print("\nYou return to the F11 Hallway.\n"),new T;t.print("\nInvalid command!")}return n})()}}class m{getName(e){return"Hidden Room"}getDescription(e){return"You are in the hidden room of the hotel that no one dares to enter. This room is super dark and\nyou feel like there are millions of eyes watching you. On the table, you see a delicious\n[burger] that someone prepared for you. At the same time, you also see a shining [key] dropped on\nthe ground. Feel free to head [back] if you finish observing or you're just too scared."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("burger"===r)t.print("\nYou ate a burger that someone injected venom, the only thing you can do now is to enjoy the\nlast minute of your life.\n");else if("key"===r&&!1===t.hasKey)t.print("\nYou pick up the key dropped on the ground and seems pretty useful.\n"),t.hasKey=!0;else if("key"===r&&t.hasKey)t.print("\nYou already have the same key in your pocket, there is no need to pick up another one.\n");else{if("back"===r)return t.print("\nYou return to the 9th floor hallway.\n"),new Y;t.print("\nInvaide command!")}return n})()}}class f{getName(e){return"Soda Machine"}getDescription(e){return"You are in front of the soda machine. You can purchase a [soda] for free, or head [back] to keep\nchecking the cameras."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("soda"===r)t.print("\nYou just bought and drank the soda, you feel you can run faster than anytime before. Maybe this\nwill come useful later.\n"),t.speed+=10;else{if("back"===r)return t.print("\nYou return to check the camera.\n"),new b;t.print("\nInvalid command!")}return n})()}}class y{getName(e){return"Hotel Back Gate"}getDescription(e){return"You see the light! This is the last door you gotta open to get out of this place. You enetered\nthe password from the paper you stole. It's unlocked, trying to [open] it. If you are having\ntrouble opening it, you're too weak and need to go [back] to find something to boost your\nstrength."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("open"===r&&t.strength>=10)t.print("Great work! You successfully opened the gate and now you are out of the hotel."),t.print("\nHope you had fun playing this game. Remember, Manager Jones is the one behind this!\n"),t.gameWon();else if("open"===r&&t.strength<10)t.print("\nYou do not have enough strength to open this gate. You need to find something to eat!\n");else{if("back"===r)return t.print("\nYou head back to the cafe.\n"),new w;t.print("\nInvalid command!")}return n})()}}class w{getName(e){return"Cafe"}getDescription(e){return"Somehow you are in the lobby of the hotel now. This is a cafe that you found while escaping from\nthe staff. Now in front of you, there is another [burger], not sure if you wanna eat this.\nYou can disregard it and head towards the [gate] as well if you want."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("burger"===r)t.print("\nWow, this burger tastes delicious. You feel like you are getting stronger.\n"),t.strength+=10;else{if("gate"===r)return t.print("\nNow you are heading towards the back gate, you're almost there.\n"),new y;t.print("\nInvalid command!")}return n})()}}class v{getName(e){return"Staff Lounge"}getDescription(e){return"You enter the staff lounge and see a staff member taking a nap on the chair. You see a paper\non his belt and stole it from him. Suddenly, you wake the staff member and it starts to chase\nyou. The hotel back [gate] is just in front, you can also hide in the [cafe] for a moment.\nMake a quick decison!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"gate"===r&&t.speed<10||"cafe"===r&&t.speed<10?(t.print("\nYou are too slow!! The staff esaily cought up to you can locked you back in Room 0901.\nMaybe try to find something that can boost your speed nex time.\n"),new k):"gate"===r&&t.speed>=10?(t.print("\nYou outrun the staff memeber! Now you are in front the hotel back gate.\n"),new y):"cafe"===r&&t.speed>=10?(t.print("\nYou outrun the staff member! Now you are inside of a cafe.\n"),new w):(t.print("\nInvalid command!"),n)})()}}class b{getName(e){return"Camera Room"}getDescription(e){return"This is a camera room used by the staff, there are more than 10 computers in this room. You want\nto [check] the camera to find where you need to go next. At the same time, you see a random\nfree [soda] machine on the side. You can also choose to head [back] if you missed something."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("check"===r&&!1===t.hasCamera)t.print("\nYou do not have access to the camera, maybe you forgot to pick up something important?\n");else{if("check"===r&&t.hasCamera)return t.print("\nYou successfully accessed the camera and located the staff lounge, you will be heading there now.\n"),new v;if("soda"===r)return t.print("\nSeems like you want to slack off just a little. You head towards the soda machine...\n"),new f;if("back"===r)return t.print("\nYou return to Room 0901.\n"),new k;t.print("\nInvalid command!")}return n})()}}class k{getName(e){return"Room 0901"}getDescription(e){return"This rooom is very similar to Room 1101 with its brand new design, seems like someone was locked\nhere just like you. As you observe the room, you find out that this room directly leads to a\n[camera] room, you also see a [card] covered in blood on the bed. You can also head [back]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("camera"===r)return t.print("\nYou enter the camera room directly ahead, start observing the room.\n"),new b;if("card"===r&&!1===t.hasCamera)t.print("\nYou pick up the bloody card, maybe you'll use it later.\n"),t.hasCamera=!0;else if("card"===r&&t.hasCamera)t.print("\nYou already have this card in your pocket, you don't need a second one.\n");else{if("back"===r)return t.print("\nYou return to the hallway.\n"),new Y;t.print("\nInvalid command!")}return n})()}}class Y{getName(e){return"F9 Hallway"}getDescription(e){return"This is just like the hallway on the 11th floor, it also has a customer [room]. The only\ndifference is that it's on the 9th floor, and there is a [hidden] room that no one dares to enter.\nIt's not too late to head [back]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("room"===r&&!1===t.hasKey)t.print("\nThis door is somehow locked, maybe try to find a key?\n");else{if("room"===r&&t.hasKey)return t.print("\nYou opened the door with the key, now you are in Room 0901.\n"),new k;if("hidden"===r)return t.print("\nWOW, what a courage! You enter the scaring hidden room in the corner.\n"),new m;if("back"===r)return t.print("\nYou return to the elevator and begins heading back up.\n"),new I;t.print("\nInvalid Command!")}return n})()}}class I{getName(e){return"Elevator"}getDescription(e){return"This is the only elevator in this hotel, the only floor that lights up is the 9th floor. The door\nhas opened for you to [enter], or you can choose to stay [back]"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("\nYou enter the elevator, it is approaching the 9th floor where you will continue your escape...\n"),new Y):"back"===r?(t.print("\nIt seems like you are too scared to enter the elvator, you will head back to the hallway.\n"),new T):(t.print("\nInvalid command!"),n)})()}}class T{getName(e){return"F11Hallway"}getDescription(e){return"You got out of the room and now you are in the hallway of the 11th floor. You see an [elevator]\nin front and a opened [electrical] room that seems to be strange, you can also head [back] to\nroom 1101"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("elevator"===r&&t.hasCard)return t.print("\nYou swipe the staff card and the door of the elevator slowly opens.\n"),new I;if("elevator"===r&&!1===t.hasCard)t.print("\nYou do not have access to the elevator, maybe look for a card?\n");else{if("electrical"===r)return t.print("\nYou enter the strange electrical room that looks like an electrical room.\n"),new g;if("back"===r)return t.print("\nYou return to room 1101.\n"),new C;t.print("\nInvalid command!")}return n})()}}class C{getName(e){return"Room 1101"}getDescription(e){return"Relatively new and clean room, seems like you are the first one to be locked in here. You realized\nthat the front door of the room is missing its handle. Do you want to try to open the [door] or\nwait for [death]. At the same time you saw a slightly cracked [drawer]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("drawer"===r)!1===t.hasHandle?(t.print("\nYou opened the drawer and found a door handle inside.\n"),t.hasHandle=!0):!0===t.hasHandle&&t.print("\nYou already have the handle in your hand.\n");else if("door"===r&&!1===t.hasHandle)t.print("\nYou tried to open the door but you can't seem to open it without a handle.\n");else{if("door"===r&&t.hasHandle)return t.print("\nYou successfully opened the door!\n"),new T;"death"===r?(t.print("\nYou will stay in this room and starve to death!!!\n"),t.gameOver()):t.print("\nInvalid command!")}return n})()}}class A extends n{constructor(){super(...arguments),this.hasHandle=!1,this.hasKey=!1,this.hasCard=!1,this.hasCamera=!1,this.speed=0,this.strength=0}getName(){return"Hotel Escape"}getAuthor(){return"Manager Jones"}getDescription(){return"Can you escape from this hotel?"}onStart(){var e=this;return t(function*(){return e.hasHandle=!1,e.hasKey=!1,e.hasCard=!1,e.hasCamera=!1,e.speed=0,e.strength=0,yield e.printTextFile("HotelEscape/title.txt"),e.print("\n                           A text adventure by Manager Jones\n"),e.sleep(.5),e.print("\nYou suddenly wake up and found yourself locked in Room 1101 inside of a hotel.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new C})()}}const D=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new l),e.push(new c),e}getAdventure(){return new A}};class L{constructor(e){this.TYPE="PrintMessage",this.message=e}}class N{constructor(){this.TYPE="PickAdventureMessage"}}const S=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,a="assets/"+e;o.addEventListener("load",i=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${a}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",a),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new L(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=D.SINGLE_ADVENTURE_MODE?D.getAdventure():D.getAdventures()[e.index];t.setEngine(S),console.log("Starting PrintThread."),S.startPrintThread(),console.log("Starting adventure."),t.run(),D.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new N))}else"InputMessage"==e.TYPE?S.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
!function(){"use strict";function e(e,t,n,o,r,a,i){try{var s=e[a](i),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(o,r)}function t(t){return function(){var n=this,o=arguments;return new Promise(function(r,a){var i=t.apply(n,o);function s(t){e(i,r,a,s,u,"next",t)}function u(t){e(i,r,a,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var o=this;return t(function*(){console.log("Printing: "+e),yield o.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let r=0;r<e.length;r++)n+=r%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let o="| "+e+t;this.print("\n"+n+"\n"),this.print(o+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class o{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("boulder"===o&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===o&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===o)return t.print("You return to the Mouth of the Cave\n"),new u;t.print("Invalid command!\n")}return n})()}}class r{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("weights"===o&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===o&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===o)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new s;t.print("Invalid command!\n")}return n})()}}class a{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"back"===o?(t.print("You head back the way you came.\n"),new i):("wake"===o?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===o&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==o||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class i{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("snoring"===o)return t.print("You slowly approach the snoring...\n"),new a;if("chest"===o&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==o||t.hasKey){if("tunnel"===o)return t.print("You head back toward the mouth of the cave.\n"),new s;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class s{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"button"===o?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new r):"tunnel"===o?(t.print("You continue down the tunnel.\n"),new i):"mouth"===o?(t.print("You return to the mouth of the cave.\n"),new u):(e.print("Invalid command!\n"),n)})()}}class u{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"right"===r?(t.print("You take the path to the right.\n"),new s):"left"===r?(t.print("You take the path to the left.\n"),new o):"entrance"===r?(t.print("On second thought, you return to the entrance.\n"),new h):(t.print("Invalid Command!\n"),n)})()}}class h{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"enter"===o?(t.print("You enter the cave.\n"),new u):("run"===o?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class l extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new h})()}}class d{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"back"===o?(t.print("\nSeeing no way forward, you return to the subway platform\n"),new p):("goat"===o?(t.print("\nThere is an angry looking goat blocking the escalator\n."),t.print("\nThe goat looks very [hungry]. BAAAAA"),t.isGoatOnFire&&t.print("\nThe Goat is on [fire].\n")):"fire"===o&&t.isGoatOnFire?t.hasSpryte?(t.print("\nYou take spryte from your pocket and pour it over the goat. The flames go out\n."),t.isGoatOnFire=!1):t.print("\nYep that's a fire\n."):"fire"!==o||t.isGoatOnFire?"hungry"===o&&t.isGoatOnFire?t.print("\nThe goat is on fire perhaps there is a way to put it out\n."):"hungry"!==o||t.isGoatOnFire?t.print("\nInvalid command\n."):(t.print("\nThe goat looks quite hungry.\nYou hand it the empty Spryte can.\nThe goat crunches through it in a matter of seconds.\n It 'BAAAAS' happily before hopping away.\nYou continue up the broken escalator and return home.\n Did that really happen"),t.gameWon()):t.print("\nNo fire here!\n."),n)})()}}class p{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("escalator"===o)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===o)return t.print("\nYou start to walk up the escalator.\n"),new d;"machine"===o?t.print("\nOh wow! It's one of those cool new spryte machines. It has a [coin] slot.\n"):"coin"===o&&!1===t.hasSpryte?(t.print("\nYou drop 4 coins into the vending machine. You hear a large whirring sound followed by a loud \n'KA-CHUUNK'. You reach down and pick up a spryte.\n"),t.hasSpryte=!0):t.print("coin"===o&&t.hasSpryte?"\nYou already have a coin.\n":"\nInvalid command!\n")}return n})()}}class g extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new p})()}}class c{getName(e){return"Bathroom "}getDescription(e){return"You get into the bathroom and as you expected the faucet actually runs with [water].\nYou can either use it or just [leave].\n"}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("water"===o&&!t.hasCup)return t.print("\nYou realize your hands are dirty and decide to wash your hands.\nYou do this and leave the bathroom.\n"),new y;if("water"===o&&t.hasCup&&!t.hasVisitedCasino)t.print("\nYou fill up your cup with water and drink it.\nIt has been a long journey at sea after all.\n");else if("water"===o&&t.hasCup&&t.hasVisitedCasino)t.print("\nYou fill up your cup with water at the faucet.\nNow you can probably help settle things down at the casino.\nMaybe the casino owner will give you berries for it.\n"),t.hasCupFilled=!0;else{if("leave"===o)return t.print("\nYou leave the bathroom.\n"),new y;t.print("\nInvalid Command goofy.\n")}return n})()}}class y{getName(e){return"Bar"}getDescription(e){return"\nYou go to the bar and you ask the bartender if he has food and/or water.\nHe says he can give you a [burger] but for some reason the plumbing at the bar has not been\nworking.\nHe does say that he has a [cup] and that you could go to the [bathroom]. You could also just\n[back].\n"}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("burger"===o&&t.hasVisitedCasino)t.print("\nHe gives you a burger. You think about [eating] it considering you've been off at sea for awhile without proper food.\nI mean yea you originally came over here to help feed the man at the casino but you did use your own money.\nYou could still just go [back] though.\n"),t.hasBurger=!0;else if("eating"===o&&t.hasBurger)t.print("\nYou eat the burger and it was actually pretty good.\nNow you got the energy to fight the man at the casino.\nAre you strong enough though?\n"),t.hasBurger=!1;else if("burger"!==o||t.hasVisitedCasino)if("cup"!==o||t.hasVisitedCasino)if("cup"===o&&t.hasVisitedCasino)t.print("\nI mean this cup is cool and all but you still need water.\nThe bartender tells you that you can go get water from the bathroom faucet.\nIt's not the best but it's better than nothing.\n"),t.hasCup=!0;else{if("bathroom"===o)return t.print("\nYou decide to go to the bathroom.\n"),new c;if("back"===o)return t.print("\nYou decide to go back to town.\n"),new b;t.print("\nInvalid command weirdo.\n")}else t.print("\nThe bartender hands you a cup.\nNow you can go to the bathroom and get water if you want.\n"),t.hasCup=!0;else t.print("\nYou've been out at sea for awhile without proper food.\nMight as well eat it.\n");return n})()}}class m{getName(e){return"Rain Dinners"}getDescription(e){return"You get to the casino with the purpose of possibly getting some money.\nYou see that there is some [hungry] aggravated man who's causing problems for everyone else at\nthe casino.\nHe keeps yelling he's [thirsty] and he needs some water.\nHe keeps flipping tables and keeps fighting everyone who bothers him.\nOn top of that he seems to be pretty strong.\nThe owner of Rain Dinners tells you that he'll pay you 10 million berries to fix this.\nWanna [fight] him? You could also just [leave]"}handleInput(e){var n=this;return t(function*(){const t=e;t.hasVisitedCasino=!0;const o=(yield t.getInput()).toLowerCase().trim();if("hungry"===o&&!t.hasBurger)return t.print("\nYou go up to the man to address his hunger and he gets mad at you because you don't have food\nso you run away\n"),new b;if("thirsty"===o&&!t.hasCupFilled)return t.print("\nYou go up to the man to address his thirst and he gets mad at you because you don't have water\nso you run away\n"),new b;if("fight"!==o||t.hasDevilFruit){if("leave"===o)return t.print("\nYou leave the casino.\n"),new b;("hungry"===o||"thirsty"===o)&&t.hasBurger&&t.hasCupFilled?(t.print("Well you solved the problem in the most pacifist way possible.\nMaybe fighting isn't supposed to solve all problems..."),t.gameWon()):"hungry"===o&&t.hasBurger?t.print("\nYou talk to him he says he really was just hungry and sometimes it gets out of hand.\nHe Calmed down and says he's still thirsty.\n He might go back to the state he was in if he doesn't get water.\n who knows.\n"):"thirsty"===o&&t.hasCupFilled?t.print("\nYou talk to him he says he really was just thirsty and sometimes it gets out of hand.\nHe Calmed down and says he's still hungry.\n He might go back to the state he was in if he doesn't food.\n who knows.\n"):"fight"===o&&t.hasDevilFruit?(t.print("\nYou finally eat the flare-flare fruit. You gain devil fruit powers that allow your body to become\nfire if anyone tries to hit you but you can also solidify if you please.\nYou start fighting the man and you realize it would've been impossible to win without this power.\nHe puts up a pretty good fight even with your flare-flare powers because you don't know how to manage it yet.\nThe fight ends in your victory.\nThe manager of the casino ends up giving you money for saving his business.\nYour job is finished"),t.gameWon()):t.print("\nInvalid Command smh\n")}else t.print("\nYou go up to fight him because he seems like he can't be reasoned with.\nHe weaves your first punch and then just knocks you out first try!\nIf only you had a devil fruit or something...\n"),t.gameOver();return n})()}}class f{getName(e){return"shady fruit shop"}getDescription(e){return"You approach an eerie and mysterious man running a shack that seems to not be getting a lot of\nbusiness.\nUsually you wouldn't pay it much mind but all types of weird stuff happens in the new world.\nYou talk to him and he says you can [buy] a devil fruit.\nThis excites you but then he proceeds to tell you that if you eat it you will never be able to\nswim again.\nThat sounds terrible to you since you're a pirate who spends most of your time at sea.\nAt the same time though, you will become invulnerable as your body can become fire on command.\nYou consider just going back into [town].\n"}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("buy"!==o||t.hasVisitedCasino){if("buy"===o&&t.hasVisitedCasino)return t.print("\nYou talk to him and he says he's selling a devil fruit which contains the flare-flare powers!\nWith this you will almost certainly be able to win that fight now.\n"),t.hasDevilFruit=!0,new b;if("town"===o)return t.print("\nYou choose to go back into town.\n"),new b;t.print("\nInvalid command man learn how to type.\n")}else t.sleep(.5),t.sleep(.5),t.sleep(.5),t.print("\nYou talk to him and he says he's selling a devil fruit!\nYou buy it and save it for later.\n"),t.hasDevilFruit=!0;return n})()}}class w{getName(e){return"Food Court"}getDescription(e){return"You get into the food court and you see a lot of stores but nothing necessarily catches your\ninterest.\nMight even just go back into [town].\nBefore you decide to go back you notice a fruit [shop] in the back corner of the food court.\nWonder what's back there."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("town"===o)t.print("\nYou decide that you don't really want any of the food here and you don't feel like making a stop anywhere.\nSo You go back into town.\n");else{if("shop"===o)return t.print("\nSeems interesting enough.\n"),new f;t.print("\nInvalid command unfortunately.\n")}return n})()}}class b{getName(e){return"Dressrosa"}getDescription(e){return"You go into town just looking for entertainment and food however that may come.\nYou can go get food at the [food court].\nMaybe something interesting is gonna happen there,\nor maybe at the [bar],\nor maybe the [casino].\nWho really knows."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"food court"===o?(t.print("\nLet's go find some good eats.\n"),new w):"bar"===o?(t.print("\nLooking for adventure you decide to head out to the deck.\n"),new y):"casino"===o?(t.print("\nLet's go get some money then"),new m):"back"===o?(t.print("\nYou change your mind and decide to maintain peace for the day"),new v):(t.print("\nInvalid Command sadly.\n"),n)})()}}class v{getName(e){return"Port"}getDescription(e){return"There's nothing but oil rigs and other ships here. Might as well either go into [town]\nor get back on the [ramp] "}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"ramp"===o?(t.print("\nYou changed your mind and you decide to go back to the ship. Maybe go for a swim again.\n"),new k):"town"===o?(t.print("\nHungry and maybe looking for some way to get stronger, you decide to go into town.\n"),new b):(t.print("\nInvalid Command."),n)})()}}class k{getName(e){return"Ramp To Island"}getDescription(e){return"Now that you made it this far can go for a [swim] or to just go into the [port]."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("deck"===o)t.print("\nYou decide to go back to the deck and live in peace for the day.\n");else if("swim"===o)t.print("\nYou decide to go for a swim.\n"),t.print("\nMight be one of the last times.\n");else{if("port"===o)return t.print("\nYou decide to the port.\n"),new v;t.print("\nInvalid Command Bozo.\n")}return n})()}}class Y{getName(e){return"Main Deck"}getDescription(e){return"You are now on the main deck you can either head [back] to your quarters or you can take the\n[ramp] and start heading into town."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"ramp"===o?(t.print("\nLooking for adventure or maybe even chaos you start to head to the port towards the town.\n"),t.print("\nWonder if there's a devil fruit in town.\n"),new k):"back"===o?(t.print("\nYou decide to go back.\n"),new I):(t.print("\nInvalid command do better.\n"),n)})()}}class I{getName(e){return"Captains Quarters"}getDescription(e){return"You are sleeping in your quarters. You can either go back to [sleep] or head out to the [deck]."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("sleep"===o)t.print("\nI guess your tired from just trying to get here. So you go back to sleep.\n"),t.gameOver();else{if("deck"===o)return t.print("\nLooking for adventure you decide to head out to the deck.\n"),new Y;t.print("\nInvalid Command.\n")}return n})()}}class C extends n{constructor(){super(...arguments),this.hasCup=!1,this.hasCupFilled=!1,this.hasDevilFruit=!1,this.hasBurger=!1,this.hasPapertowels=!1,this.hasVisitedCasino=!1}getName(){return"Two Piece"}getAuthor(){return"Audemar"}getDescription(){return"Go cause a commotion in dressrosa!"}onStart(){var e=this;return t(function*(){return e.hasBurger=!1,e.hasCup=!1,e.hasCupFilled=!1,e.hasDevilFruit=!1,e.hasPapertowels=!1,yield e.printTextFile("TwoPiece/title2.txt"),e.print("\n                           A text adventure by Audemar\n"),e.sleep(.5),e.print("\nAfter a long voyage at sea and night of rest you wake up at a an island in the new world.\n\n"),e.sleep(.5),e.print("You wake up hungry and aggravated for whatever reason.\n\n"),e.sleep(.5),e.print("Who knows what's ahead of you on this island...\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new I})()}}const T=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new l),e.push(new g),e}getAdventure(){return new C}};class D{constructor(e){this.TYPE="PrintMessage",this.message=e}}class A{constructor(){this.TYPE="PickAdventureMessage"}}const L=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let o=this.getStartTime();for(let r=0;r<e.length;r++)o+=n,this.printQueue.push({message:e[r],renderAfter:o})}printLines(e,t){const n=1e3*t;let o=this.getStartTime();e.forEach(e=>{o+=n,this.printQueue.push({message:e+"\n",renderAfter:o})})}printFile(e,n=.1){var o=this;return t(function*(){return new Promise(t=>{if(o.fileCache.has(e)){const r=o.fileCache.get(e);return o.printLines(r,n),void t()}const r=new XMLHttpRequest,a="assets/"+e;r.addEventListener("load",i=>{let s=[];r.status>=200&&r.status<300?s=r.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${r.status} - ${r.statusText}`],console.error(`Could not load: ${a}`)),o.fileCache.set(e,s),o.printLines(s,n),t()}),r.open("GET",a),r.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new D(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=T.SINGLE_ADVENTURE_MODE?T.getAdventure():T.getAdventures()[e.index];t.setEngine(L),console.log("Starting PrintThread."),L.startPrintThread(),console.log("Starting adventure."),t.run(),T.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new A))}else"InputMessage"==e.TYPE?L.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
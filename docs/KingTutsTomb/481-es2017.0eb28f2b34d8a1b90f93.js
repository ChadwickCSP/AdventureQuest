!function(){"use strict";function e(e,t,n,r,o,a,i){try{var s=e[a](i),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,a){var i=t.apply(n,r);function s(t){e(i,o,a,s,u,"next",t)}function u(t){e(i,o,a,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new u;t.print("Invalid command!\n")}return n})()}}class o{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new s;t.print("Invalid command!\n")}return n})()}}class a{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new i):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class i{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new a;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new s;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class s{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new o):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new i):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new u):(e.print("Invalid command!\n"),n)})()}}class u{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"right"===o?(t.print("You take the path to the right.\n"),new s):"left"===o?(t.print("You take the path to the left.\n"),new r):"entrance"===o?(t.print("On second thought, you return to the entrance.\n"),new h):(t.print("Invalid Command!\n"),n)})()}}class h{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new u):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class l extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new h})()}}class p{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("\nSeeing no way forward, you return to the subway platform.\n"),new d):("goat"===r?(t.print("\nThere is an angry looking goat blocking the escalator.\n"),t.print("\nThe goat looks very [hungry]. BAAAA!\n"),t.isGoatOnFire&&t.print("\nThe goat is on [fire].\n")):"fire"===r&&t.isGoatOnFire?t.hasSpryte?(t.print("\nYou take the Spryte from your pocket and pour it over the goat. The flames go out.\n"),t.isGoatOnFire=!1):t.print("\nYep! That's a fire!\n"):"fire"!==r||t.isGoatOnFire?"hungry"===r&&t.isGoatOnFire?t.print("\nThe goat is on fire. Perhaps you should find a way to put it out.\n"):"hungry"!==r||t.isGoatOnFire?t.print("\nInvalid command!"):(t.print("\nThe  goat looks. You hand it the the empty Spryte can. \n"),t.print("\nThe goat crunches through it in a matter of seconds.\n"),t.print("\nIt 'BAAAS' happily before hopping away. You continue up the broken escalator and return home.\n"),t.print("\nDid that really happen?\n"),t.gameWon()):t.print("\nNo fire here!\n"),n)})()}}class d{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new p;if("machine"===r)return t.print("\nOh wow! It's one of those cool new Spryte machines. It has a [coin] slot.\n"),new d;"coin"===r&&!1===t.hasSpryte?(t.print("\nYou drop 4 coins into the vending machine. You hear a loud whirring sound followed by a loud.\n"),t.print("\n*KA-CHUNK*\n"),t.print("\nYou reach down and pickup a Spryte.\n"),t.hasSpryte=!0):t.print("coin"===r&&t.hasSpryte?"\nYou already have a Spryte\n":"\nInvalid command!")}return n})()}}class g extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new d})()}}class c{getName(e){return"Dead End..."}getDescription(e){return"You are in a room with [Chest] in the middle. You can go [BACK]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("chest"===r&&0==t.hasKey)t.print("\nYou open the chest and see a key.\n"),t.print("\nYou pick it up after considering all the curses it probably has.\n"),t.hasKey=!0;else if("chest"===r&&1==t.hasKey)t.print("\nNo reffils\n");else{if("back"===r)return t.print("\nYou go back to the tunnel"),new m;t.print("\nInvalid command!")}return n})()}}class m{getName(e){return"Left Tunnel..."}getDescription(e){return"You see a [DOOR] in wall infront of you. You can also go [BACK]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"door"===r?(t.print("\nYou walk to the door and are able to open the door. You walk in\n"),new c):"back"===r?(t.print("\nYou go back to the Entrance\n"),new C):(t.print("\nInvalid command!"),n)})()}}class y{getName(e){return"LA Fitness..."}getDescription(e){return"You realize that this is a LA Fitness. \nYou see a [TRACK] and a [JUMP] room. You can also go [BACK]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("track"===r&&0==t.hasSpeed)t.print("\nYou run the track for 5 minutes\n"),t.hasSpeed=!0;else if("track"===r&&1==t.hasSpeed)t.print("\nTryhard\n");else if("jump"===r&&0==t.hasJump)t.print("\nYou long jump for 10 minutes\n"),t.hasJump=!0;else if("jump"===r&&1==t.hasJump)t.print("\nTryhard\n");else{if("back"===r)return t.print("\nYou go back to the Ominous Room\n"),new I;t.print("\nInvalid Command!\n")}return n})()}}class f{getName(e){return"Death Lol..."}getDescription(e){return"You enter the room and instantly you get shot by an arrow. You can [SAY] your last words."}handleInput(e){var n=this;return t(function*(){const t=e;return"say"===(yield t.getInput()).toLowerCase().trim()?(t.print("\nAH S...."),yield t.printTextFile("KingTutsTomb/dead.txt"),t.gameOver()):t.print("\nInvalid Command!"),n})()}}class w{getName(e){return"Left Tunnel..."}getDescription(e){return"You enter a room and see a [DOOR] at the end. You can go [BACK]"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"door"===r?(t.print("\nYou open the door and go in"),new f):"Back"===r?(t.print("\nYou go back to the small room."),new k):(t.print("\nInvalid Command!"),n)})()}}class v{getName(e){return"End..."}getDescription(e){return"You have made it to the end! You see King Tuts [SARCOPHAGUS]."}handleInput(e){var n=this;return t(function*(){const t=e;return"sarcophagus"===(yield t.getInput()).toLowerCase().trim()?(t.print("\nYou look inside the sarcophagus and... ."),t.sleep(2),t.printTextFile("KingTutsTomb/end.txt"),t.sleep(2),t.gameWon()):t.print("\nInvalid Command!"),n})()}}class Y{getName(e){return"Right Tunnel 2..."}getDescription(e){return"There is a [DOOR] infront of you. Its locked. You can go [BACK]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"door"===r&&1==t.hasKey?(t.print("\nYou unlock the door and go in."),new v):(t.print("door"===r&&0==t.hasKey?"\nNo key, no entry":"back"===r?"\nYou go back.":"\nInvalid Command!"),n)})()}}class k{getName(e){return"Small Room..."}getDescription(e){return"After calming down, you see a [BUTTON] on the wall. You also see a door to the [LEFT] or [RIGHT]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("button"===r&&0==t.isBridgeDown)t.print("\nYou go up the wall and hit the button"),t.sleep(1),t.print("\nA bridge lowers from the roof. You can now go [BACK]."),t.isBridgeDown=!0;else if("button"===r&&1==t.isBridgeDown)t.print("\nYou already hit it bozo.");else{if("left"===r)return t.print("\nYou walk to the left door and walk in."),new w;if("right"===r)return t.print("\nYou walk to the right door and walk in."),new Y;if("back"===r)return t.print("\nYou go back to the Jump Room"),new b;t.print("\nInvalid Command!")}return n})()}}class b{getName(e){return"Jump Room..."}getDescription(e){return!0===e.isTigerDead?"You walk back into the room over the bridge.\nBrings back memories. You can go [BACK] to the small room or [FORWARD] to the long tunnel.":"You make to the next room but the tiger keeps chasing you. \nYou see a hole in front. You have to [JUMP]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("jump"===r&&1==t.hasJump&&0==t.isTigerDead)return t.print("\nYou jump across the hole and make it to the other side."),t.print("\nThe tiger trys to jump but fails. He dies."),yield t.printTextFile("KingTutsTomb/tiger.txt"),t.isTigerDead=!0,new k;if("jump"===r&&0==t.hasJump&&0==t.isTigerDead)t.print("\nYou jump accross the hole but dont make it. You fall to your death."),yield t.printTextFile("KingTutsTomb/dead.txt"),t.sleep(1),t.gameOver();else{if("forward"==r&&1==t.isTigerDead)return t.print("\nYou go back to the long Tunnel"),new T;if("back"==r&&1==t.isTigerDead)return t.print("\nYou go back to the small room"),new k;t.print("\nInvalid command!")}return n})()}}class T{getName(e){return"Long Tunnel..."}getDescription(e){return!0===e.isTigerDead?"You walk into the room and get even more memories. \nYou can go [BACK] to the Jump Room or [FORWARD] to the ominous Room":"You walk into the room. \nYou instantly see a undead tiger at the end you have to be to get to the next room. \nYou can [RUN]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("run"===r&&1==t.hasSpeed)return t.print("\nYou start running, and the tiger starts chasing you.\n"),t.sleep(1),t.print("\nYou make it into the next room.\n"),new b;if("run"===r&&0==t.hasSpeed)t.print("\nYou start running, and the tiger starts chasing you.\n"),t.sleep(1),t.print("\nThe tiger catches you and you get eaten.\n"),t.sleep(1),yield t.printTextFile("KingTutsTomb/dead.txt"),t.sleep(2),t.gameOver();else{if("back"===r&&1==t.isTigerDead)return t.print("\nYou go back to the jump room"),new b;if("forward"===r&&1==t.isTigerDead)return t.print("\nYou go foward ti the ominous room."),new I;t.print("\nInvalid command!")}return n})()}}class I{getName(e){return"Ominous Room..."}getDescription(e){return"You walk into a very creppy room. You see another tunnel in [FRONT] of you but also see a \ndoorway that looks very simmilar to a [LAFITNESS]. You can also go [BACK]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"front"===r?(t.print("\nYou walk to the end of the room where you enter a tunnel..."),new T):"lafitness"===r?(t.print("\nYou walk to the entrance of the LA Fitness look alike."),new y):"back"===r?(t.print("\nYou walk back\n"),new D):(t.print("\nInvalid Command!\n"),n)})()}}class D{getName(e){return"Right Tunnel..."}getDescription(e){return"You enter the long tunnel and see a room at the far end. \nYou can [WALK] there. \nYou also see a [NOTE] on the ground. \nYou can go [BACK] to."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"walk"===r?(t.print("\nYou walk to the door and walk into the room. \n"),new I):"back"===r?(t.print("\nYou go back to the Entrance\n"),new C):("note"===r?yield t.printTextFile("KingTutsTomb/La.txt"):t.print("\nInvalid command!"),n)})()}}class C{getName(e){return"Entrance..."}getDescription(e){return"You are standing at the entrance of the Tomb. You see a door to the [LEFT] and \na door to the [RIGHT]. You can also go [BACK]"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"left"===r?(t.print("\nYou walk through the doorway to the left.\n"),new m):"right"===r?(t.print("\nYou walk through the doorway to the right.\n"),new D):(t.print("back"===r?"\nYou scardey cat. You cant leave.":"\nInvalid command!"),n)})()}}class A extends n{constructor(){super(...arguments),this.isTigerDead=!0,this.hasKey=!1,this.hasSpeed=!1,this.hasJump=!1,this.isBridgeDown=!1}getName(){return"King Tuts Tomb"}getAuthor(){return"5ive"}getDescription(){return"Can you make it to the Tomb?"}onStart(){var e=this;return t(function*(){return e.isTigerDead=!1,e.hasKey=!1,e.hasSpeed=!1,e.hasJump=!1,e.isBridgeDown=!1,e.print("\n                                    A text adventure by 5ive\n"),e.sleep(.5),yield e.printTextFile("KingTutsTomb/Pharo.txt"),e.sleep(1),e.print("\nYou walk through the Valley of the Kings\n\n"),e.sleep(.5),e.print("You reach what you were looking for....\n\n"),e.sleep(1),e.print("The entrance to....\n\n"),e.sleep(.5),yield e.printTextFile("KingTutsTomb/entrance.txt"),e.sleep(1),e.print("Press Enter to Continue..."),yield e.getInput(),new C})()}}const L=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new l),e.push(new g),e}getAdventure(){return new A}};class S{constructor(e){this.TYPE="PrintMessage",this.message=e}}class N{constructor(){this.TYPE="PickAdventureMessage"}}const E=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,a="assets/"+e;o.addEventListener("load",i=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${a}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",a),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new S(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=L.SINGLE_ADVENTURE_MODE?L.getAdventure():L.getAdventures()[e.index];t.setEngine(E),console.log("Starting PrintThread."),E.startPrintThread(),console.log("Starting adventure."),t.run(),L.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new N))}else"InputMessage"==e.TYPE?E.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
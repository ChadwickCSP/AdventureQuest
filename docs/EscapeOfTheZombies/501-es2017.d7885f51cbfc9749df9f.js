!function(){"use strict";function e(e,t,n,r,o,a,i){try{var s=e[a](i),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,a){var i=t.apply(n,r);function s(t){e(i,o,a,s,u,"next",t)}function u(t){e(i,o,a,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new u;t.print("Invalid command!\n")}return n})()}}class o{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new s;t.print("Invalid command!\n")}return n})()}}class a{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new i):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class i{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new a;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new s;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class s{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new o):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new i):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new u):(e.print("Invalid command!\n"),n)})()}}class u{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"right"===o?(t.print("You take the path to the right.\n"),new s):"left"===o?(t.print("You take the path to the left.\n"),new r):"entrance"===o?(t.print("On second thought, you return to the entrance.\n"),new h):(t.print("Invalid Command!\n"),n)})()}}class h{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new u):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class l extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new h})()}}class d{getName(e){return"Safeland"}getDescription(e){return"After collecting a crew, weapons, \nand a boat you finally reach a \nsafeland with a lot of other humans and \nyou help other humans by [send]ing out other humans \nto find more and more weapons to end this Zombie Era."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"send"===r?(t.print("You decide to send humans to search and you are praised and \nlater become the king of human kind and have the control to \nsend whoever you want outside whenever you want"),t.gameWon()):t.print("back"===r?"you decide not to help out human kind and \njust be another regular lame human but since \nyou have so much experience the other \nhumans in the safeland keep asking you to send them out.":"Invalid Command"),n})()}}class p{getName(e){return"Finale"}getDescription(e){return"Once you finish upgrading your weapon, you see the end goal of the safe land. \nSo you get on the boat and \nstart to cross the waters to reach it but you run into the \nbiggest zombie you have seen. Do you want to [return] back to the \nisland and prepare more or [fight] it with Joseph and the materials you have."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"return"===r?(t.print("You return back to the laboratory wishing to upgrade more"),new g):"fight"===r&&!0===t.hasThrowingKnives?(t.print("You choose to fight and successfully kill the \nHuge zombie with your newly upgraded throwing knives."),new d):("fight"===r&&!1===t.hasThrowingKnives?(t.print("You try to fight the huge zombie \nwith your newly upgraded bat but still get smashed to bits"),t.gameOver()):t.print("Invalid Command"),n)})()}}class g{getName(e){return"Upgrade"}getDescription(e){return"After obtaining the boat and befriending Joseph, he takes to his laboratory where he can upgrade weapons. \nHe offers to either fix the [bat] or even use and upgrade his throwing [knives]"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"bat"===r?(t.print("After landing at the laboratory, Joseph fixes and upgrades your broken bat"),t.UpgradeBat=t.UpgradeBat+5,new p):"knives"===r?(t.print("You choose to throw away that ugly bat and upgrade your newly equipped throwing knives"),t.UpgradeKnives=t.UpgradeKnives+5,t.hasThrowingKnives=!0,new p):(t.print("Invalid Command"),n)})()}}class c{getName(e){return"Meeting Joseph"}getDescription(e){return"You get startled as well when this man pulls out throwing knives and \nyou don't know if you should [fight] or try to [calm] him down."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("fight"===r)t.print("you try to fight but then you realize you don't have bat any more and \nthis man throws his knives at you and kills you");else{if("calm"===r)return t.print("You talk to this human and explain why you 2 should stick together. After talking for a \nwhile he gives you his name(Joseph) and access to his boat."),t.hasMember=!0,t.hasBoat=!0,new g;t.print("Invalid Command")}return n})()}}class m{getName(e){return"TheBoat"}getDescription(e){return"After you cross the bridge you see a boat and you enter. After entering the boat\n you see a human sleeping [wake] or do you want to [exit] the boat."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"wake"===r?(t.print("The human is startled and pulls out throwing knives"),new c):(t.print("exit"===r?"After exiting the boat you realize you cannot go anywhere \nwithout the boat, so you enter again":"Invalid Command"),n)})()}}class y{getName(e){return"Crossing The Bridge"}getDescription(e){return"In the middle of the bridge you encounter another Big Zombie and\n you need to either [fight] it or try to [avoid] it."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"fight"===r?(t.print("You have barely survived the huge zombie but your bat has been broken"),new m):(t.print("avoid"===r?"You try to avoid the zombie but \nhe grabs bites your head off and then spits you out":"Invalid Command"),n)})()}}class f{getName(e){return"TheBridge"}getDescription(e){return"You see in the distance a boat, but to get to the boat you need to [cross] by bridge."}handleInput(e){var n=this;return t(function*(){const t=e;return"cross"===(yield t.getInput()).toLowerCase().trim()?(t.print("While crossing the bridge you see a huge boss zombie and cannot get out of the car."),new y):(t.print("Invalid Command"),n)})()}}class w{getName(e){return"TheVan"}getDescription(e){return"You search around some more and see\n a Van behind where the Huge Zombie was laying. And you want to [enter] \nthe van and see the keys are in the car and it is unlocked. \nHowever there could be a zombie inside so do you want to go [back]"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r&&!1===t.hasCar?(t.print("Luckily the car has a ton of gas inside and there is no zombie inside"),t.hasCar=!0,new f):(t.print("back"===r?"you choose not to enter the van and go back to searching around":"Invalid Command"),n)})()}}class b{getName(e){return"Fight"}getDescription(e){return"As soon as you step outside you see a huge Zombie and decide to [fight] it."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"fight"===r&&!0===t.hasBat?(t.print("You use your bat to kill the huge zombie"),new w):("fight"===r&&!1===t.hasBat?(t.print("You try to fight the Zombie with your bare hands but get brutally murdered"),t.gameOver()):t.print("Invalid Command"),n)})()}}class v{getName(e){return"Abandoned House"}getDescription(e){return"You see a house in front of you and you go in and you see a \n[bat] but don't know if you should grab it [dont]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"dont"===r?(t.print("you walk back outside finding nothing interesting in the house"),t.hasBat=!1,n):"bat"===r?(t.print("When you open the door you see a bat and grab it"),t.hasBat=!0,new b):(t.print("Invalid Command"),n)})()}}class k{getName(e){return"The Wild"}getDescription(e){return"You have just spawned in a new world and it seems something about this world is \ndifferent than the Earth you know [search]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"search"===r?(t.print("After searching you find an abandoned house"),new v):("go in"===r?(t.print("When you open the door you see a bat and grab it"),t.hasBat=!0):t.print("Invalid Command"),n)})()}}class I extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1,this.hasBat=!1,this.hasCar=!1,this.hasThrowingKnives=!1,this.hasMember=!1,this.hasBoat=!1,this.UpgradeBat=5,this.UpgradeKnives=10}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.hasSpryte=!1,e.hasBat=!1,e.hasCar=!1,e.hasMember=!1,e.hasThrowingKnives=!1,e.hasBoat=!1,e.UpgradeBat=5,e.UpgradeKnives=10,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Tom\n"),new k})()}}class T{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("Seeing no way forward, you return to the subway platform."),new Y):("goat"===r?(t.print("There is an angry looking goat blocking the escalator\n"),t.print("The goat looks very [hungry] BAAA"),t.isGoatOnFire&&t.print("The goat is on [fire].")):"fire"===r&&t.isGoatOnFire?t.hasSpryte?(t.print("\nYou take the Spryte from your pocket and pour it over the goat. The flames go out.\n"),t.isGoatOnFire=!1):t.print("Yep! Thats a fire!"):"fire"!==r||t.isGoatOnFire?"hungry"===r&&t.isGoatOnFire?t.print("The goat is on fire. Perhaps you should find a way to put it out"):"hungry"!==r||t.isGoatOnFire?t.print("\nInvalid Command\n"):(t.print("The goat looks quite hungry. You hand it the empty Spryte can.\nThe goat crunches through it in a matter of seconds. it 'BAAAAS' happily before hopping away. \nYou continue up the broken escalator and return home. Did that really happen?"),t.gameWon()):t.print("No fire here!"),n)})()}}class Y{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new T;t.print("\nInvalid command!")}return n})()}}class C extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new Y})()}}const A=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new l),e.push(new C),e}getAdventure(){return new I}};class D{constructor(e){this.TYPE="PrintMessage",this.message=e}}class L{constructor(){this.TYPE="PickAdventureMessage"}}const N=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,a="assets/"+e;o.addEventListener("load",i=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${a}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",a),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new D(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=A.SINGLE_ADVENTURE_MODE?A.getAdventure():A.getAdventures()[e.index];t.setEngine(N),console.log("Starting PrintThread."),N.startPrintThread(),console.log("Starting adventure."),t.run(),A.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new L))}else"InputMessage"==e.TYPE?N.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
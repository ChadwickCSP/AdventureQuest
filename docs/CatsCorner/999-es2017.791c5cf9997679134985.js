!function(){"use strict";function e(e,t,n,r,o,a,i){try{var s=e[a](i),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,a){var i=t.apply(n,r);function s(t){e(i,o,a,s,u,"next",t)}function u(t){e(i,o,a,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"Bathroom"}getDescription(e){return"You enter the Bathroom and look up to see [toilet paper].\n\nThere is a door leads you [back] to the living room.\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("toilet paper"===r&&t.hasLeggos)t.print("You take out your Leggos that you got from the Kid's Bedroom.\n"),!1===t.hasToiletPaper?(t.print("Now that you're taller, you reach out for the toilet paper.\n"),t.hasToiletPaper=!0,t.print("This might be helpful for later!\n")):t.print("You already have toilet paper!\n");else if("toilet paper"!==r||t.hasLeggos){if("back"===r)return t.print("You return to the Living Room"),new d;t.print("Invalid command!")}else t.print("You can't reach the toilet paper with your little mouse legs!\nFind something that will make you taller.\n");return n})()}}class o{getName(e){return"Attic"}getDescription(e){return"You enter the dark and damp Attic and come across a roll of [tape].\n\nThere is a door that leads you [back] to the Parent's Bedroom.\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("tape"!==r||t.hasStickyPaws)if("tape"===r&&t.hasStickyPaws)t.print("Your paws are already sticky!\n");else{if("back"===r)return t.print("You return to the Parent's Bedroom"),new a;t.print("Invalid command!")}else t.print("You walk over the tape.\n"),t.hasStickyPaws=!0,t.print("Your paws are now sticky. You can climb up walls now!\n");return n})()}}class a{getName(e){return"Parent's Bedroom"}getDescription(e){return"You enter the Parent's Bedroom and find a drawer. You try to [open] it.\n\nThere is a door that leads you [back] to the living room.\nThere is another door to the [right].\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("open"===r&&t.sharpness>=6)t.print("You chew through the drawer and open it with ease.\n"),t.hasCatTreat?t.print("You already found everything in this drawer!\n"):(t.print("In the drawer, you find a cat treat.\n"),t.print("You take it and keep it in your mouse cheeks.\n"),t.hasCatTreat=!0);else if("open"===r&&t.sharpness<6)t.print("You're teeth aren't sharp enough to chew through the drawer!\n");else{if("back"===r)return t.print("You return to the Living Room. \n"),new d;if("right"===r)return t.print("You enter the door to the right.\n"),new o;t.print("Invalid command!")}return n})()}}class i{getName(e){return"Cat's Corner"}getDescription(e){return"You enter the Cat's Corner. Facing a ferocious cat you need something to distract\nit to get a key for the pantry.\nSomething like a [cat treat] would be perfect!\n\nThere is a door that leads you [back] to the Kitchen.\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("cat treat"===r&&t.hasKey)t.print("You already have the key! Try finding out what the key unlocks.\n");else if("cat treat"===r&&t.hasCatTreat)t.print("You throw the treat. The cat runs towards it leaving the key unguarded.\n"),t.print("You get the key for the pantry without being eaten. Phew!\n"),t.hasKey=!0;else if("cat treat"!==r||t.hasCatTreat){if("back"===r)return t.print("You return to where the puddle once was.\n"),new u;t.print("Invalid command!")}else t.print("You need to find a cat treat to distract the cat. Unless you want to be eaten!\n");return n})()}}class s{getName(e){return"Pantry"}getDescription(e){return"You need a [key] to open the pantry.\n\nThere is a door that leads you [back] to where the puddle once was.\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("key"===r&&t.hasKey)t.print("You use the key to open the pantry and come before piles of oozy, fragrant cheese!\n"),t.gameWon();else{if("back"===r)return t.print("You return to where the puddle once was.\n"),new u;t.print("Invalid command!")}return n})()}}class u{getName(e){return"Cross The Puddle"}getDescription(e){return"There is another door that leads [down] and another to the [right].\n\nThere is a door that leads you [back] to the entrance of the Kitchen.\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"down"===r?(t.print("You enter the door.\n"),new i):"right"===r?(t.print("You enter the door to the right.\n"),new s):"back"===r?(t.print("You return to the Kitchen entrance.\n"),new h):(t.print("Invalid command!"),n)})()}}class h{getName(e){return"Kitchen"}getDescription(e){return"You enter the Kitchen. There is a puddle in your way blocking the other pathways.\nSomething like [toilet paper] might be able to help you cross the puddle.\n\nThere is a door that leads you [back] to the Kid's Bedroom.\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"toilet paper"===r&&t.hasToiletPaper?(t.print("You use the toilet paper to cross the puddle.\n"),new u):"back"===r?(t.print("You return to the Kid's Bedroom.\n"),new l):(t.print("Invalid command!"),n)})()}}class l{getName(e){return"Kid's Bedroom"}getDescription(e){return"You enter the Kid's Bedroom and see some something on a shelf. You try to [climb] up the wall.\n\nThere a door that leads you [back] to the living room.\nThere is another door to the [right].\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("climb"===r)t.hasStickyPaws?(t.print("You climb up the wall and reach some Leggo blocks.\n"),t.hasLeggos=!0,t.print("These Leggos can make you taller now!\n")):t.print("You're paws are too slippery to climb up the wall.\n");else{if("back"===r)return t.print("You return to the Living Room.\n"),new d;if("right"===r)return t.print("You enter the door to the right.\n"),new h;t.print("Invalid command!")}return n})()}}class p{getName(e){return"Backyard"}getDescription(e){return"You enter the Backyard and see a dog toy on the ground.\nYou can [chew] on the toys or you can approach the [dog kennel].\n\nThere is a door leads you [back] to the living room.\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("chew"===r&&t.sharpness<10)t.print("You chew on the dog toy.\n"),t.sharpness=t.sharpness+6,t.print(`The sharpness of your teeth is now ${t.sharpness}\n`);else if("chew"===r&&t.sharpness>=10)t.print("Your teeth are pretty sharp already!\n");else if("dog kennel"===r)t.print("You come closer to the dog. Hearing it start to growl, you try to run away, but it's too late!\n"),t.print("The dog launches at you and grabs your tail.\n"),t.gameOver();else{if("back"===r)return t.print("You return to the Living Room"),new d;t.print("Invalid command!")}return n})()}}class d{getName(e){return"Living Room"}getDescription(e){return"You run into the house coming across 5 different pathways from the living room. \nThe paths lead to the [left], [right first room], [right second room], or [down]. \nThe entrance is also [back] behind you.\n"}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"back"===o?(t.print("You return to the House Entrance.\n"),new c):"left"===o?(t.print("You take the path to the left.\n"),new r):"right first room"===o?(t.print("You take the path to the right.\n"),new a):"right second room"===o?(t.print("You take the path to the right.\n"),new l):"down"===o?(t.print("You take the path down.\n"),new p):(t.print("Invalid command!"),n)})()}}class c{getName(e){return"House Entrance"}getDescription(e){return"You stand at the entrance of the dark and gloomy house.\nOthers have told you that at the other end of the house, mounds of cheese and other\ngoods are piled in the pantry. Do you [enter] and risk\ngetting eaten by a cat? Or do you [run] back to your cold and foodless home.\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the house.\n"),new d):("run"===r?(t.print("On second thought, you don't want the gourmet cheese as much as you thought you did.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class g extends n{constructor(){super(...arguments),this.sharpness=0,this.hasCatTreat=!1,this.hasStickyPaws=!1,this.hasLeggos=!1,this.hasToiletPaper=!1,this.hasKey=!1}getName(){return"Cat's Corner"}getAuthor(){return"Susan Cho"}getDescription(){return"As a mouse, find your way around a house to find a pantry filled with cheese!"}gameWon(){var e=()=>super.gameWon,n=this;return t(function*(){e().call(n),yield n.printTextFile("CatsCorner/winnermice.txt")})()}gameOver(){var e=()=>super.gameOver,n=this;return t(function*(){e().call(n),yield n.printTextFile("CatsCorner/gameover.txt")})()}onStart(){var e=this;return t(function*(){return e.sharpness=0,e.hasCatTreat=!1,e.hasStickyPaws=!1,e.hasLeggos=!1,e.hasToiletPaper=!1,e.hasKey=!1,yield e.printTextFile("CatsCorner/mice.txt"),yield e.printTextFile("CatsCorner/title.txt"),e.print("\n                                  A text adventure by Susan Cho\n"),e.sleep(.5),e.print("\nAfter not having food for two days, you are a mouse trying to find a source\nof food for your family.\n\n"),e.sleep(.5),e.print("You follow a scent that leads you to a house that smells delightful.\n\n"),e.sleep(.5),e.print("Peering through the windows, you see many dangers in the way of a stuffed pantry.\n\n"),e.sleep(.5),e.print("You walk up to the door.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new c})()}}class m{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new k;t.print("Invalid command!\n")}return n})()}}class y{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new v;t.print("Invalid command!\n")}return n})()}}class f{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new w):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class w{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new f;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new v;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class v{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new y):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new w):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new k):(e.print("Invalid command!\n"),n)})()}}class k{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"right"===r?(t.print("You take the path to the right.\n"),new v):"left"===r?(t.print("You take the path to the left.\n"),new m):"entrance"===r?(t.print("On second thought, you return to the entrance.\n"),new b):(t.print("Invalid Command!\n"),n)})()}}class b{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new k):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class Y extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new b})()}}class I{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("\nSeeing no way forward, you return to the subway platform.\n"),new T):("goat"===r?(t.print("\nThere is an angry looking goat blocking the escalator.\n"),t.print("\nThe goat looks very [hungry]. BAAAA!\n"),t.isGoatOnFire&&t.print("\nThe goat is on [fire].\n")):"fire"===r&&t.isGoatOnFire?t.hasSpryte?(t.print("\nyou take the Spryte from your pocket and pour it over the goat. The flames go out.\n"),t.isGoatOnFire=!1):t.print("\nYep! That's a fire!"):"fire"!==r||t.isGoatOnFire?"hungry"===r&&t.isGoatOnFire?t.print("\nThe goat is on fire. Perhaps you should find a way to put it out.\n"):"hungry"!==r||t.isGoatOnFire?t.print("\nInvalid command!"):(t.print("\nThe goat looks quite hungry. You hand it the empty Spryte can.\nThe goat crunches through it in a matter of seconds. It 'BAAAS' happily before hopping away.\nYou continue to the broken escalator and return home.\nDid that really happen?\n"),t.gameWon()):t.print("\nNo fire here!"),n)})()}}class T{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new I;"machine"===r?t.print("\nOh wow! It's one of those cool new Spryte machines. It has a [coin] slot.\n"):"coin"!==r||t.hasSpryte?t.print("coin"===r&&t.hasSpryte?"\nYou already have a Spryte\n":"\nInvalid command!"):(t.print("\nYou drop 4 coins into the vending machine. You hear a loud whirring sound \nfollowed by a loud *KA-CHUNK*. You reach down and pick up a Spryte.\n"),t.hasSpryte=!0)}return n})()}}class C extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new T})()}}const L=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new Y),e.push(new C),e}getAdventure(){return new g}};class S{constructor(e){this.TYPE="PrintMessage",this.message=e}}class D{constructor(){this.TYPE="PickAdventureMessage"}}const A=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,a="assets/"+e;o.addEventListener("load",i=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${a}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",a),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new S(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=L.SINGLE_ADVENTURE_MODE?L.getAdventure():L.getAdventures()[e.index];t.setEngine(A),console.log("Starting PrintThread."),A.startPrintThread(),console.log("Starting adventure."),t.run(),L.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new D))}else"InputMessage"==e.TYPE?A.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
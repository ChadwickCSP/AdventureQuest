!function(){"use strict";function e(e,t,n,r,o,a,i){try{var s=e[a](i),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,a){var i=t.apply(n,r);function s(t){e(i,o,a,s,u,"next",t)}function u(t){e(i,o,a,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"Peppermint Forest"}getDescription(e){return"The Peppermint Forest is where the [Licorice Lemurs] can be distracted by the candy cane obtained\nin Candy Cane Corner. \nPlayers can choose to distract lemurs with candy cane and proceed to [dots door] or [return] to Candy Cane Corner."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"licorice lemurs"===r&&!0===t.hasCandyCane?(t.print("You throw the candy cane, and the lemurs scurry away from Dots Door distracted.\n"),t.print("You head back toward the Castle Foyer.\n"),new p):"licorice lemurs"!==r||t.hasCandyCane?"return"===r?(t.print("You decide to go back to Candy Cane Corner.\n"),new o):(t.print("Invalid command!"),n):(t.print("The licorice lemurs pounce at you forcing you to retreat!\n"),new o)})()}}class o{getName(e){return"Candy Cane Corner"}getDescription(e){return"This is where the candy cane resides. \nThe player can decorate the [christmas tree] and earn the candy cane, \nproceed to [Peppermint Forest], or [return] to the Toffee Bridge."}handleInput(e){var n=this;return t(function*(){const t=e,i=(yield t.getInput()).toLowerCase().trim();return"christmas tree"===i?(t.print("You decorate the Christmas tree."),t.sleep(1),t.print("A Candy Cane falls from the tree to your feet.\n"),t.print("You put the Candy Cane in your pocket.\n"),t.hasCandyCane=!0,new o):"peppermint forest"===i?(t.print("You proceed to the Peppermint Forest.\n"),new r):"return"===i?(t.print("You return to the Toffee Bridge.\n"),new a):(t.print("Invalid Command!\n"),n)})()}}class a{getName(e){return"Toffee Bridge"}getDescription(e){return"This is the bridge that connects the Chocolate Mountain to Candy Cane Corner. \nThe player must choose to [cross] the bridge and enter into Candy Cane Corner or\n[return] to Chocolate Mountain."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"cross"===r?(t.print("You cross Toffee Bridge.\n"),new o):"return"===r?(t.print("You turn back and return to the Chocolate Mountain."),new i):(t.print("Invalid command!"),n)})()}}class i{getName(e){return"ChocolateMountain"}getDescription(e){return"This is where the gingerbread from the Castle Foyer is used to access [Toffee Bridge]. \nThe player can choose to access the toffee bridge or [return] to the Castle Foyer."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"toffee bridge"===r&&t.hasGingerbread?(t.print("You use the gingerbread to access toffee bridge.\n"),new a):"toffee bridge"!==r||t.hasGingerbread?"return"===r?(t.print("You decide you no longer want to access Toffee Bridge and return to the Castle Foyer.\n"),new p):(t.print("Invalid command!"),n):(t.print("You attempt to access the bridge with your hands!\n"),t.sleep(1),t.print("A cotton candy cloud pushes you back."),new p)})()}}class s{getName(e){return"Gum Drop Gym"}getDescription(e){return"The castle has a gym just off the path inside. \nThe player can lift [weights] here to increase their strength or [return] to the castle foyer."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<5)t.print("You do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=5)t.print("You're feeling pretty strong already, maybe you could go lift some peanut brittle!\n");else{if("return"===r)return t.print("You turn back and return to the castle foyer."),new p;t.print("Invalid command!\n")}return n})()}}class u{getName(e){return"Dots Door"}getDescription(e){return"You face a giant door. \nThe licorice lemurs must be distracted by the candy cane in order to access the door. \nThe player must use the burning smore to [burn] down the door to retrieve Princess Poppy Seed.\nAnother path leads [back] to the Smores Sauna. "}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new h):("licorice lemurs"===r?(t.print("The lemurs are not distracted..\n"),t.sleep(1),t.print("The licorice lemurs smother you and with nothing to avert their focus you suffocate under them."),t.gameOver()):"burn"===r&&t.hasSmore?(t.print("Holding the burning smore, you set fire to the door.\n"),t.sleep(1),t.print("The door crumbles under the fire, and Princess Poppy Seed appears. Princess Poppy Seed jumps\nwith excitement as she realizes she is free. \nCongratulations, you are a hero!"),t.gameWon()):"burn"!==r||t.hasSmore?t.print("Invalid command!"):(t.print("You attempt to knock the door down with your fists!\n"),t.sleep(1),t.print("The noise attracts back the licorice lemurs. You are overtaken."),t.gameOver()),n)})()}}class h{getName(e){return"Smores Sauna"}getDescription(e){return"A [chest] lies in the middle of the room. \nThe chest contains a burning marshmallow.\nA key is required to open the chest.\nAlternatively, you can [return] to Lollipop Lane. "}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("dots door"===r)return t.print("You approach the door...\n"),new u;if("chest"===r&&t.hasKey)!1===t.hasSmore?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a burning marshmallow!\n"),t.hasSmore=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("return"===r)return t.print("You head back to Lollipop Lane."),new l;t.print("Invalid command!")}else t.print("The chest is locked!\n");return n})()}}class l{getName(e){return"Lollipop Lane"}getDescription(e){return"This is a hall lane within the castle. \nThere is [peanut brittle] here with a lollipop key under it. \nThe player must be strong enough to pick up the peanut brittle (strength >= 5). \nThe key opens the chest in the [smores sauna].\nThere is a path that you can take to [return] to the castle foyer."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("peanut brittle"===r&&t.strength<5)t.print("You try to lift the peanut brittle but you're too weak!\n");else if("peanut brittle"===r&&t.strength>=5)t.print("You lift the peanut brittle with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the peanut brittle, you find a lollipop key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("smores sauna"===r)return t.print("You proceed to the smores sauna.\n"),new h;if("return"===r)return t.print("You return to the Castle Foyer\n"),new p}return n})()}}class p{getName(e){return"Castle Foyer"}getDescription(e){return"This is the first main room of the castle. \nThe player must choose whether to return to the [entrance], proceed [diagonally],\ngo [left] or go [right].\nA piece of [gingerbread] lies within the castle foyer and is needed to access the toffee bridge."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("gingerbread"===r&&!1===t.hasGingerbread)t.print("You put gingerbread in your pocket."),t.hasGingerbread=!0;else if("gingerbread"===r&&!0===t.hasGingerbread)t.print("You already have the gingerbread");else{if("right"===r)return t.print("You take the path to the right.\n"),new l;if("left"===r)return t.print("You take the path to the left.\n"),new i;if("diagonally"===r)return t.print("You take the diagonal path.\n"),new s;if("entrance"===r)return t.print("On second thought, you return to the entrance.\n"),new c;t.print("Invalid Command!\n")}return n})()}}class c{getName(e){return"Castle Entrance"}getDescription(e){return"This is the entrance to the castle. The player must choose to [enter] the castle or [run] home."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the castle.\n"),new p):("run"===r?(t.print("Uninterested in rescuing Princess Poppy Seed, you run home to eat soup.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class d extends n{constructor(){super(...arguments),this.hasGingerbread=!1,this.strength=0,this.hasCandyCane=!1,this.hasKey=!1,this.hasSmore=!1}getName(){return"Candy Castle"}getAuthor(){return"Jolly Jones"}getDescription(){return"Can you pass the Princesses' challenge?"}onStart(){var e=this;return t(function*(){return e.print("\n                           A text adventure by Z\n"),e.sleep(.5),e.print("\nA sweet smell floats down Rocky Road as you proceed on your daily walk."),e.print("\nYou look up to the top of Mystic Mountain where the fog has passed and there lies Candy Castle."),e.print("\nYou start heading towards the front of the castle.\n"),e.sleep(.5),e.print("As you become closer to the castle you hear the faint calls of Princess Poppy Seed."),e.print("\nShe has been trapped by some air heads and is in need of rescuing.\n"),e.sleep(.5),e.print("You approach the Castle's door.\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new c})()}}class g{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new b;t.print("Invalid command!\n")}return n})()}}class m{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new w;t.print("Invalid command!\n")}return n})()}}class y{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new f):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class f{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new y;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new w;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class w{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new m):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new f):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new b):(e.print("Invalid command!\n"),n)})()}}class b{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"right"===r?(t.print("You take the path to the right.\n"),new w):"left"===r?(t.print("You take the path to the left.\n"),new g):"entrance"===r?(t.print("On second thought, you return to the entrance.\n"),new v):(t.print("Invalid Command!\n"),n)})()}}class v{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new b):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class k extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new v})()}}class C{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("\nSeeing no way forward, you return to the subway platform.\n"),new I):("goat"===r?(t.print("\nThere is an angry looking goat blocking the escalator.\n"),t.print("\nThe goat looks very [hungry].BAAAA!\n"),!0===t.isGoatOnFire&&t.print("\nThe goat is on [fire].\n")):"fire"===r&&!1===t.isGoatOnFire?!1===t.hasSpryte?t.print("\nYep! That's a fire!\n"):(t.print("\nYou take the Spryte from your pocket and pour it over the goat. The flames go out.\n"),t.isGoatOnFire=!1):"fire"===r&&t.isGoatOnFire?t.print("\nNo fire here!\n"):"hungry"===r&&!0===t.isGoatOnFire?t.print("The goat is on fire. Perhaps you should find a way to put it out.\n"):"hungry"===r&&!1===t.isGoatOnFire?(t.print("The goat looks quite hungry. You hand it the empty Spryte can.\n The goat crunches it in a matter of seconds. It 'BAAAAS' happily before hopping away. You continue up the broken escalator and return home. Did that really happen?"),t.gameWon()):t.print("\nInvalid command!"),n)})()}}class I{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new C;"machine"===r?t.print("Oh Wow! Its one of those cool new Spryte machines. It has a [coin] slot./n"):"coin"===r&&!1===t.hasSpryte?(t.print("You drop 4 coin into the vending machine. You hear a loud whirring sound followed by a\n loud *KA-CHUNK*.You reach down and pickup a Spyrte.\n"),t.hasSpryte=!0):"coin"===r&&t.hasSpryte&&t.print("You already have a Spryte.\n")}return n})()}}class Y extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new I})()}}const T=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new k),e.push(new Y),e}getAdventure(){return new d}};class S{constructor(e){this.TYPE="PrintMessage",this.message=e}}class A{constructor(){this.TYPE="PickAdventureMessage"}}const L=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,a="assets/"+e;o.addEventListener("load",i=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${a}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",a),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new S(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=T.SINGLE_ADVENTURE_MODE?T.getAdventure():T.getAdventures()[e.index];t.setEngine(L),console.log("Starting PrintThread."),L.startPrintThread(),console.log("Starting adventure."),t.run(),T.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new A))}else"InputMessage"==e.TYPE?L.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
!function(){"use strict";function e(e,t,n,r,o,a,i){try{var s=e[a](i),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,a){var i=t.apply(n,r);function s(t){e(i,o,a,s,u,"next",t)}function u(t){e(i,o,a,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new u;t.print("Invalid command!\n")}return n})()}}class o{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new s;t.print("Invalid command!\n")}return n})()}}class a{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new i):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class i{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new a;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new s;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class s{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new o):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new i):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new u):(e.print("Invalid command!\n"),n)})()}}class u{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"right"===o?(t.print("You take the path to the right.\n"),new s):"left"===o?(t.print("You take the path to the left.\n"),new r):"entrance"===o?(t.print("On second thought, you return to the entrance.\n"),new h):(t.print("Invalid Command!\n"),n)})()}}class h{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new u):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class l extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new h})()}}class d{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("\nSeeing no way forward, you return to the subway platform.\n"),new p):("goat"===r?(t.print("\nThere is an angry looking goat blocking the escalator.\n"),t.print("\nThe goat looks very [hungry]. BAAAAA!\n"),!0===t.isGoatOnFire&&t.print("\nThe goat is on [fire].\n")):"fire"===r&&!0===t.isGoatOnFire?!0===t.hasSpryte?(t.print("\nYou take the Spryte from your pocket and pour it over the goat. The flames go out.\n"),t.isGoatOnFire=!1):t.print("\nYep! That's a fire!\n"):"fire"===r&&t.isGoatOnFire?t.print("\nNo fire here\n"):"hungry"===r&&!0===t.isGoatOnFire?t.print("\nThe goat is on fire. Perhaps you should find a way to put it out.\n"):"hungry"!==r||t.isGoatOnFire?t.print("\nInvalid Command!\n"):(t.print("\nThe goat looks quite hungry. You hand it the empty \nSpryte can. The goat crunches through it in a matter of seconds. \nIt 'BAAAAS' happily before hopping away. You continue up the broken escalator \nand return home. Did that really happen?\n"),t.gameWon()),n)})()}}class p{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new d;"machine"===r?t.print("\nOh wow! It's one of those cool new Spryte machines. It has a [coin] slot.\n"):"coin"===r&&!1===t.hasSpryte?(t.print("\nYou drop 4 coins into the vending machine. You hear a loud \nwhirring sound followed by a loud 'KA-Chunk'. You reach down and pick up a Spryte.\n"),t.hasSpryte=!0):t.print("coin"===r&&!0===t.hasSpryte?"mYou already have a Spryte\n":"\nInvalid command!")}return n})()}}class c extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new p})()}}class g{getName(e){return"Food Pantry"}getDescription(e){return"You enter the most amazing food pantry you have ever seen. \nYou notice there are lots of dog [treats] but nothing to satisfy your appetite. \nYou can also [return] from where you entered."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("treats"===r&&!1===t.hasTreats)t.print("You find the most appetizing looking dog treat and stash it in your pocket.\n"),t.hasTreats=!0;else if("treats"===r&&!0===t.hasTreats)t.print("Your pockets are already too full of dog treats.\n");else{if("return"===r)return t.print("You return to the Golden Hallway\n"),new I;t.print("Invalid command!\n")}return n})()}}class m{getName(e){return"Kitchen"}getDescription(e){return'You enter a restaurant-level kitchen with ovens, fridges, toasters, friers, and more. \nThere is also a [potion] labeled "Invisibility". \nYou can also [return] from the way you came in.'}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("potion"===r&&!1===t.hasPotion)t.print("You grab the invisibility potion and drink it.\nYou start feeling a tingly sensation and all of the sudden you feel lighter.\n"),t.hasPotion=!0;else if("potion"===r&&!0===t.hasPotion)t.print("You already drank the potion. The flask is empty\n");else{if("return"===r)return t.print("You return to the Golden Hallway\n"),new I;t.print("Invalid command!\n")}return n})()}}class y{getName(e){return"Balcony"}getDescription(e){return"You step out onto a beautiful balcony. \nFrom here you can see nothing blue skies, \nthe crystal blue water, and surrounding jungle. \nThere is nothing to do here except enjoy the view or [return] to the swimming pool."}handleInput(e){var n=this;return t(function*(){const t=e;return"return"===(yield t.getInput()).toLowerCase().trim()?(t.print("You take one last look at the view and turn around.\n"),new b):(t.print("Invalid command!\n"),n)})()}}class w{getName(e){return"Futbol Pitch"}getDescription(e){return"You are suddenly blinded by light. \nYour suddenly begin to notice that you have stepped out onto a \nprofessional sized futbol pitch. \nThe humid air light blows through stadium. \nThere is nothing to do here except to play futbol and [return] to the Gaming Room"}handleInput(e){var n=this;return t(function*(){const t=e;return"return"===(yield t.getInput()).toLowerCase().trim()?new f:(t.print("Invalid command!\n"),n)})()}}class f{getName(e){return"Gaming Room"}getDescription(e){return"You enter a dark and colorful room. \nSlowly you begin to notice monitors, pcs, and gaming equipment. \nYou make out a [door] at the other end of the room and a [password] on a white board. \nYou can also [return] to the Garage."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("password"===r&&!1===t.hasPassword)t.print("You take out your phone and write the password down.\n"),t.hasPassword=!0;else if("password"===r&&!0===t.hasPassword)t.print("You already have the password on you phone.\n");else{if("door"===r)return t.print("You walk across the room and reach to open the soundproof door.\n"),new w;if("return"===r)return t.print("You return to the Garage.\n"),new Y;t.print("Invalid command!\n")}return n})()}}class v{getName(e){return"Vault"}getDescription(e){return"You walk through the door and a giant vault door. \nThe vault has a scanner for a dog tag and a slot for a key. \nYou can try to [unlock] the vault or [return] from the way you came."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("unlock"===r&&!1===t.hasTag&&!1===t.hasKey)t.print("You don't have the dog tag or key to unlock the vault.\nIt remains locked.\n");else if("unlock"===r&&!0===t.hasTag&&!1===t.hasKey)t.print("You reach into you pocket for the dog tag and scan it.\nThe vault waits for the key but you do not have it.\nThe vault remains locked.\n");else if("unlock"===r&&!1===t.hasTag&&!0===t.hasKey)t.print("You insert the key into the vault and wait.\nYou don't have a dog tag to scan and the vault remains locked.\n");else if("unlock"===r&&!0===t.hasTag&&!0===t.hasKey)t.print("You scan the dog tag and insert the key.\nYou wait a second and then the vault accepts the identification.\nYou listen as the vault clicks and finally open. Inside you see the World Cup trophy! You quickly \ngrab the trophy and open an adjacent door that leads to a secret entrance to another garage.\nYou quickly take a boat and speed away.\n"),t.gameWon();else{if("return"===r)return t.print("You turn around and return to the hallway.\n"),new k;t.print("Invalid command!\n")}return n})()}}class k{getName(e){return"Secure Hallway"}getDescription(e){return"You enter a long white hallway with a fortified steel door \nwith password entry at the other end.\nYou see security cameras and motion sensors ahead. \nYou can choose to go forward to the keypad and enter a [password] or [return] to the garage."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("password"===r&&!1===t.hasPotion)t.print("You begin walking forward but the cameras and motion sensors\n pick up your movement. The alarm sounds and lights start to flash.\n"),t.gameOver();else if("password"===r&&!0===t.hasPotion&&!1===t.hasPassword)t.print("You walk past the cameras and motion sensors without a stir.\nYou reach the door but it requires a password.\nYou are stuck.\n");else{if("password"===r&&!0===t.hasPotion&&!0===t.hasPassword)return t.print("You glide past the cameras and motion sensors without alerting them.\nYou reach the door and type the password from your phone.\nThe door slowly unlock and swings open.\n"),new v;if("return"===r)return new Y;t.print("Invalid command!\n")}return n})()}}class Y{getName(e){return"Garage"}getDescription(e){return"You enter a massive garage with luxury cars parked in every available space. \nYou notice a [key] wall that looks important and a colorful door to your [left]. \nYou can also [return] from the way you came \nor go through the door [straight] ahead marked with surveillance signs. \nWhich path do you pick?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("key"===r&&!1===t.hasKey)t.print("You grab the key that looks the most important and stuff it in your pocket.\n"),t.hasKey=!0;else if("key"===r&&!0===t.hasKey)t.print("You already have the most important key and don't have any more room in your pocket.\n");else{if("left"===r)return t.print("You walk past all the cars and click the button to open the door.\n"),new f;if("straight"===r)return t.print("You make your way through the cars and cautiously open the door.\n"),new k;t.print("Invalid command!\n")}return n})()}}class b{getName(e){return"Swimming Pool"}getDescription(e){return"As you look into the glass doors you see a magnificent pool with water falls and slides. \nYou enter and see a dog. \nAlerted, the dog walks towards you ready to bark. \nYou can give it a [treat], take its dog [tag], walk [forward], turn to a door on your [right], \nor [return] to the Golden Hallway. \nWhich path do you pick?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("treat"===r&&!0===t.hasTreats)t.print("You reach into your pocket and pull out a treat.\nYou give it to the dog the sits and begins devouring the treat.\n"),t.hasFood=!0;else if("treat"===r&&!1===t.hasTreats)t.print("You reach into your pocket but it's empty.\nThe dog walks closer and starts barking.\n"),t.gameOver();else if("tag"===r&&!0===t.hasFood)t.print("You discreetly unhook the tag and take it while the dog eats the snack.\n"),t.hasTag=!0;else if("tag"===r&&!1===t.hasFood)t.print("You reach for the tag, but the dog starts growling and and barking.\n"),t.gameOver();else if("forward"===r&&!1===t.hasFood)t.print("You try to walk around the dog but it starts barking.\n"),t.gameOver();else{if("forward"===r&&!0===t.hasFood)return t.print("You walk past the dog as it eats the treat and reach the door at the other end.\n"),new Y;if("right"===r&&!0===t.hasFood)return t.print("You turn to the outside facing doors and push them open.\n"),new y;"right"===r&&!1===t.hasFood?(t.print("You turn to your right but the dog is alerted and begins barking.\n"),t.gameOver()):t.print("Invalid command!\n")}return n})()}}class I{getName(e){return"Golden Hallway"}getDescription(e){return"You are standing at one end of a gorgeous hallway plated with gold. \nThere is a door to your [left] and a door on your [right]. \nYou also see that the hallway proceeds [forward]. \nWhich path do you pick?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"left"===r?(t.print("You walk towards the door on your left. It opens automatically.\n"),new g):"right"===r?(t.print("You turn to the right a walk towards a giant metal door.\n"),new m):"forward"===r?(t.print("You walk forward as you analyze the Greek columns and Gold Trim.\nAs you walk and look at the photos of dogs, you begin to notice the air is getting warmer\nand more humid. As you near a glass door, you peer inside."),new b):(t.print("Invalid command!"),n)})()}}class T{getName(e){return"Volcano Door"}getDescription(e){return"You are standing at the face of a lavafall. \nThere is an open door. \nDo you [enter] here or [retreat] to your home?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You proceed through the door as the lava parts ways.\n"),new I):("retreat"===r?(t.print("You aren't up for the challenge and begin walking home\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class C extends n{constructor(){super(...arguments),this.hasTreats=!1,this.hasPotion=!1,this.hasTag=!1,this.hasKey=!1,this.hasPassword=!1,this.hasFood=!1}getName(){return"Futbol Legend"}getAuthor(){return"Bucket Hat Boi Becket"}getDescription(){return"Can you retrieve the stolen World Cup Trophy in time?"}onStart(){var e=this;return t(function*(){return e.hasTreats=!1,e.hasPotion=!1,e.hasTag=!1,e.hasKey=!1,e.hasPassword=!1,e.hasFood=!1,yield e.printTextFile("FutbolLegend/title.txt"),e.print("\n                           A text adventure by Bucket Hat Boi Becket\n"),e.sleep(.5),e.print("\nWord has just gotten out that the World Cup tournament trophy has been stolen.\n\n"),e.sleep(.5),e.print("\nNews channels and speculations all point to a suspicious villain named Ava.\n\n"),e.sleep(.5),e.print("\nHer lair is located on her private island with an active volcano.\n\n"),e.sleep(.5),e.print("\nWith the tournament beginning in only 24 hours, the tournament's board has offered a hefty \nreward for the return of the trophy with the promise of eternal glory.\n\n"),e.sleep(.5),e.print("\nWill you rise to the challenge or cower at the face of danger?\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new T})()}}const A=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new l),e.push(new c),e}getAdventure(){return new C}};class D{constructor(e){this.TYPE="PrintMessage",this.message=e}}class L{constructor(){this.TYPE="PickAdventureMessage"}}const P=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,a="assets/"+e;o.addEventListener("load",i=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${a}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",a),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new D(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=A.SINGLE_ADVENTURE_MODE?A.getAdventure():A.getAdventures()[e.index];t.setEngine(P),console.log("Starting PrintThread."),P.startPrintThread(),console.log("Starting adventure."),t.run(),A.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new L))}else"InputMessage"==e.TYPE?P.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
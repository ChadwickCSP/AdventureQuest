!function(){"use strict";function e(e,t,n,r,o,i,a){try{var s=e[i](a),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,i){var a=t.apply(n,r);function s(t){e(a,o,i,s,u,"next",t)}function u(t){e(a,o,i,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"Kitchen"}getDescription(e){return"You walk into the Kitchen, you can cook the [Burger] or you can [exit] the kithen."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("burger"===r)t.hasBeef?t.hasBread?t.hasCheese?t.hasMustard?t.hasLettuce?t.hasSpatula?t.hasSpatula&&t.hasMustard&&t.hasLettuce&&t.hasBread&&t.hasBeef&&t.hasCheese&&(t.print("\nYou gather all the ingredients together and cook a burger."),t.hasBurger=!0):t.print("\nYou don't have the spatula."):t.print("\nYou don't have the lettuce."):t.print("\nYou don't have the mustard."):t.print("\nYou don't have the cheese."):t.print("\nYou don't have the bread."):t.print("\nYou don't have the beef.");else{if("exit"===r)return t.print("\nYou exit to the Restaurant Floor."),new o;t.print("\nInvalid command!")}return n})()}}class o{getName(e){return"Restaurant Floor"}getDescription(e){return"You enter into the restaurant floor, you see a customer waiting for their [Burger],\nyou can also enter into the [Kitchen] or [exit] to the restaurant."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();if("burger"===o&&!0===t.hasBurger)t.print("\nYou give the burger to the customer."),t.gameWon();else{if("kitchen"===o)return t.print("\nYou head to the Kitchen."),new r;if("exit"===o)return t.print("\nYou head to the front of the restaurant"),new d;t.print("\nInvalid command!")}return n})()}}class i{getName(e){return"Vegetable Aisle"}getDescription(e){return"You enter into the Vegetable Aisle and see the [Lettuce],\nyou can also enter the [Cheese Aisle], [Kitchen Utensil Aisle], or the [Deli]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("lettuce"===r)t.print("\nYou go and grab the lettuce."),t.hasLettuce=!0;else if("lettuce"===r&&1==t.hasLettuce)t.print("\nYou already have lettuce.");else{if("cheese aisle"===r)return t.print("\nYou head to the Cheese Aisle"),new u;if("kitchen utensil aisle"===r)return t.print("\nYou head to the Kitchen Utensil Aisle"),new a;if("deli"===r)return t.print("\nYou head to the Deli."),new s}return n})()}}class a{getName(e){return"Kitchen Utensil Aisle"}getDescription(e){return"You enter into the Kitchen Utensil Aisle, you look around and you can [Get Spatula] \nfrom the shelf or you can go to the [Condiment Aisle], [Deli], [Vegetable Aisle], [Bread Aisle], or [Exit] "}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("get spatula"===r&&0==t.hasSpatula)t.print("\nYou grab the Spatula from the shelf."),t.hasSpatula=!0;else if("get spatula"===r&&1==t.hasSpatula)t.print("\nYou already have a spatula.");else{if("condiment aisle"===r)return t.print("\nYou head to the Condiment Aisle"),new l;if("deli"===r)return t.print("\nYou head to the Deli."),new s;if("vegetable aisle"===r)return t.print("\nYou head to the Vegetable Aisle."),new i;if("bread aisle"===r)return t.print("\nYou head to the Bread Aisle."),new h;if("exit"===r)return t.print("\nYou exit to the front of the store."),new p;t.print("\nInvalid command!")}return n})()}}class s{getName(e){return"Deli"}getDescription(e){return"You enter the deli, you can get some [beef] for the burgers, or you can go to the [Vegetable Aisle],\n[Kitchen Utensil Aisle], the [Cheese Aisle], or go back to the front of the [Store]"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("beef"===r&&!1===t.hasBeef)t.print("\nYou go to the Deli counter and get some beef."),t.hasBeef=!0;else if("beef"===r&&1==t.hasBeef)t.print("\nYou already have beef.");else{if("kitchen utensil aisle"===r)return t.print("\nYou head to the Kitchen Utensil Aisle"),new a;if("vegetable aisle"===r)return t.print("\nYou head to the Vegetable Aisle"),new i;if("cheese aisle"===r)return t.print("\nYou head to the Cheese Aisle"),new u;if("store"===r)return t.print("\nYou head to the front of the store."),new p;t.print("\nInvalid command!")}return n})()}}class u{getName(e){return"Cheese Aisle"}getDescription(e){return"You enter into the cheese aisle, you look at the [Cheese] in the fridge, you can go to \nthe [Deli], [Vegetable Aisle], [Bread Aisle], or the [Condiment Aisle]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("cheese"===r&&!1===t.hasCheese)t.print("\nYou grab the cheese from the fridge."),t.hasCheese=!0;else if("cheese"===r&&1==t.hasCheese)t.print("\nYou already have cheese.");else{if("deli"===r)return t.print("\nYou head to the Deli."),new s;if("vegetable aisle"===r)return t.print("\nYou head to the Vegetable Aisle."),new i;if("bread aisle"===r)return t.print("\nYou head to the Bread Aisle."),new h;if("condiment aisle"===r)return t.print("\nYou head to the Condiment Aisle"),new l;t.print("\nInvalid command!")}return n})()}}class h{getName(e){return"Bread Aisle"}getDescription(e){return"You go to get some [Bread], you can also go to the [Cheese Aisle], the [Condiment Aisle], \nor the [Kitchen Utensil Aisle]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("bread"===r&&!1===t.hasBread)t.print("\nYou got the bread."),t.hasBread=!0;else if("bread"===r&&1==t.hasBread)t.print("\nYou already have bread.");else{if("condiment aisle"===r)return t.print("\nYou head to the Condiment Aisle"),new l;if("cheese aisle"===r)return t.print("\nYou head to the Cheese Aisle"),new u;if("kitchen utensil aisle"===r)return t.print("\nYou head to the Kitchen Utensil Aisle"),new a;t.print("\nInvalid command!")}return n})()}}class l{getName(e){return"Condiment Aisle"}getDescription(e){return"You enter into the condiment aisle, there is [Mustard] on the shelf, \nyou can enter the [Bread Aisle], [Kitchen Utensil Aisle], [Cheese Aisle], or you can [exit]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("mustard"===r&&!1===t.hasMustard)t.print("\nYou pick up the mustard."),t.hasMustard=!0;else if("mustard"===r&&1==t.hasMustard)t.print("\nYou already have mustard.");else{if("bread aisle"===r)return t.print("\nYou head to the Bread Aisle."),new h;if("kitchen utensil aisle"===r)return t.print("\nYou head to the Kitchen Utensil Aisle"),new a;if("cheese aisle"===r)return t.print("\nYou head to the Cheese Aisle"),new u;if("exit"===r)return t.print("\nYou exit to the front of the store."),new p;t.print("\nInvalid command!")}return n})()}}class p{getName(e){return"Store"}getDescription(e){return"You are at the front of the Store, you can go down the [Deli] aisle, the [Kitchen Utensil Aisle], \nthe [Condiment Aisle], or go into the [Restaurant]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"deli"===r?(t.print("\nYou head to the Deli."),new s):"kitchen utensil aisle"===r?(t.print("\nYou head to the Kitchen Utensil Aisle"),new a):"condiment aisle"===r?(t.print("\nYou head to the Condiment Aisle"),new l):"restaurant"===r?(t.print("\nYou exit to the Restaurant."),new d):(t.print("\nInvalid command!"),n)})()}}class d{getName(e){return"Restaurant"}getDescription(e){return"You enter the restaurant and look around. You can enter the [Restaurant Floor] or \ngo to the [Store] for groceries."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"store"===r?(t.print("\nYou decide to go shopping."),new p):"restaurant floor"===r?(t.print("\nYou enter into the restaurant floor."),new o):(t.print("\nInvalid command!"),n)})()}}class c extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1,this.hasBeef=!1,this.hasSpatula=!1,this.hasBread=!1,this.hasCheese=!1,this.hasMustard=!1,this.hasLettuce=!1,this.hasBurger=!1}getName(){return"Burger Man"}getAuthor(){return"You know who it is."}getDescription(){return"Can you cook a burger for your customer?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,e.hasBeef=!1,e.hasBread=!1,e.hasCheese=!1,e.hasLettuce=!1,e.hasMustard=!1,e.hasSpatula=!1,e.hasBurger=!1,e.print("\n                           A text adventure by You Know Who It IS\n"),e.sleep(.5),e.print("\nYou are a famous chef.\n\n"),e.sleep(.5),e.print("You just opened a brand new burger restaurant.\n\n"),e.sleep(.5),e.print("Now, you must get the ingredients ready, for your grand opening!\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new d})()}}class g{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new v;t.print("Invalid command!\n")}return n})()}}class f{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new w;t.print("Invalid command!\n")}return n})()}}class m{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new y):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class y{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new m;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new w;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class w{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new f):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new y):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new v):(e.print("Invalid command!\n"),n)})()}}class v{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"right"===r?(t.print("You take the path to the right.\n"),new w):"left"===r?(t.print("You take the path to the left.\n"),new g):"entrance"===r?(t.print("On second thought, you return to the entrance.\n"),new Y):(t.print("Invalid Command!\n"),n)})()}}class Y{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new v):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class b extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new Y})()}}class I{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new I;if("back"===r)return t.print("\nSeeing no way forward, you return to the subway platform."),new A;"goat"===r?(t.print("\nThere is an angry looking goat blocking the escalator."),t.print("\nThe goat looks very [hungry] BAAAA!"),!0===t.isGoatOnFire&&t.print("\nThe goat is on [fire]")):"fire"===r&&t.isGoatOnFire?!1===t.hasSpryte?t.print("\nYep!That's a fire!"):!0===t.hasSpryte&&(t.print("\nYou take the Spryte from your pocket and pour it over the goat. The flames go out."),t.isGoatOnFire=!1):"fire"===r&&!0===t.isGoatOnFire?t.print("\nNo fire here!"):"hungry"===r&&!0===t.isGoatOnFire?t.print("\nThe goat is on fire. Perhaps you should find a way to put it out."):"hungry"===r&&!1===t.isGoatOnFire?(t.print("\nThe goat looks quite hungry. You hand it the empty Spryte can."),t.print("\nThe goat crunches through it in a matter of seconds."),t.print("\nIt 'BAAAAS' happily before hopping away. You continue up the broken escalator and return home."),t.print("\nDid that really happen?"),t.gameWon()):t.print("\nInvalid command!")}return n})()}}class A{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new I;"machine"===r?t.print("\nOh wow! It's one of those cool new Spryte machines. It has a [coin] slot."):"coin"===r&&!1===t.hasSpryte?(t.print("\nYou drop 4 coins into the vending machine. You hear a loud whirring sound"),t.print("\nfollowed by a loud *KA-CHUNK*. You reach down and pickup a Spryte."),t.hasSpryte=!0):t.print("coin"===r&&!0===t.hasSpryte?"\nYou already have a Spryte":"\nInvalid command!")}return n})()}}class k extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new A})()}}const C=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new b),e.push(new k),e}getAdventure(){return new c}};class S{constructor(e){this.TYPE="PrintMessage",this.message=e}}class T{constructor(){this.TYPE="PickAdventureMessage"}}const D=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,i="assets/"+e;o.addEventListener("load",a=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${i}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",i),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new S(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=C.SINGLE_ADVENTURE_MODE?C.getAdventure():C.getAdventures()[e.index];t.setEngine(D),console.log("Starting PrintThread."),D.startPrintThread(),console.log("Starting adventure."),t.run(),C.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new T))}else"InputMessage"==e.TYPE?D.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
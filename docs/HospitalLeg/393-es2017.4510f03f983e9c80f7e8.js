!function(){"use strict";function e(e,t,n,r,o,i,a){try{var s=e[i](a),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,i){var a=t.apply(n,r);function s(t){e(a,o,i,s,u,"next",t)}function u(t){e(a,o,i,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new u;t.print("Invalid command!\n")}return n})()}}class o{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new s;t.print("Invalid command!\n")}return n})()}}class i{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new a):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class a{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new i;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new s;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class s{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new o):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new a):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new u):(e.print("Invalid command!\n"),n)})()}}class u{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"right"===o?(t.print("You take the path to the right.\n"),new s):"left"===o?(t.print("You take the path to the left.\n"),new r):"entrance"===o?(t.print("On second thought, you return to the entrance.\n"),new h):(t.print("Invalid Command!\n"),n)})()}}class h{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new u):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class l extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new h})()}}class p{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. You feel a [sleep] in bed and now are stuck in a dream."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("sleep"===r&&t.hasPill)t.print("You try to wake up but you can't!\n");else{if("sleep"===r&&!1===t.hasPill)return t.print("In you dream you see the pill helps fix your leg.\n"),t.print("You wake up and grab the [pill].\n"),t.hasPill=!0,new g;if("back"===r)return t.print("You return to the Bed\n"),new g;t.print("Invalid command!\n")}return n})()}}class d{getName(e){return"Friends House"}getDescription(e){return"You are standing outside of the hospital and [call] your friend. They pick you up."}handleInput(e){var n=this;return t(function*(){const t=e;return"call"===(yield t.getInput()).toLowerCase().trim()&&(t.print("You head into your friends car.\n"),t.sleep(1),t.print("In their car you had to their house and hang out with them. Your leg feels much better."),t.gameWon()),n})()}}class c{getName(e){return"lobby"}getDescription(e){return"You are out of the hospital and decided wheather you want to drive\nthe [car] home or call a [friend]?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"friend"===r?(t.print("You call your friend to pick you up.\n"),new d):("car"===r?(t.print("You stole a car and now are getting sent to jail.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class g{getName(e){return"Comfortable Bed"}getDescription(e){return"You lay in bed that the doctor leads you to. You see a [pill]. You can take the pill or [sleep]"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"pill"===r?(t.print("You take the pill and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The doctor runs in the room!\n"),t.print("Your leg feels numb."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("You look down and your leg is white.\n"),new c):"sleep"===r?(t.print("You fall asleep.\n"),new p):(t.print("Invalid command!\n"),n)})()}}class m{getName(e){return"Hospital"}getDescription(e){return"You walk into the hospital and see many doctors. You ask for [help]."}handleInput(e){var n=this;return t(function*(){const t=e;return"help"===(yield t.getInput()).toLowerCase().trim()?(t.print("A doctor walks up to you can shows you too a room.\n"),new g):n})()}}class f{getName(e){return"Gas Station"}getDescription(e){return"You are standing in the middle of the gas station looking for gas.\nYou find gas and are able to pick it up and bring it back to the car.\nYou are finally able to fix you leg! [fill] up the car or go [back] and look for something."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("back"===r)return t.print("You head back the way you came.\n"),new f;if("fill"===r)t.print("You [fill] up your gas tank\n"),t.sleep(1),t.print("You fill up your tank with the gas you picked up from the gas station. The gas is now filled and you are\nable to drive to the hospital. But you don't have the [key].");else{if("key"===r)return t.print("You grab the key from the dashboard.\n"),t.hasKey=!0,t.sleep(1),t.print("With the key in hand you turn on the car. You have turned on the car"),new Y;t.print("Invalid command!\n")}return n})()}}class y{getName(e){return"gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Melt fitness'.\nYou take a [weights] class to get stronger.\nacross the street is a [gas station]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("Your instructer teaches you how to lift weights\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You look much stronger and healthier. try to lift up the gas tank now.\n");else{if("gas station"===r)return t.print("You enter the gas station and look for gas"),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.strength<10?(t.print("You cannot lift the gas tank"),new v):new f;t.print("Invalid command!\n")}return n})()}}class w{getName(e){return"A dead end"}getDescription(e){return"You are at a dead end. There is no [gas] in the car. Leave the car and return [back] to the\nstreet"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("gas"===r&&t.strength>10)return new f;if("gas"===r&&t.strength<=10)t.print("You look for gas and see a gas station. The gas tank is too heavy, you are [weak].\n");else{if("weak"===r)return t.print("You head to the gym.\n"),new y;if("back"===r)return t.print("You return to the Street\n"),new v;t.print("Invalid command!\n")}return n})()}}class v{getName(e){return"Street"}getDescription(e){return"You are standing in the middle of the road. Your leg is hurt badly. You see a car and a hospital\nmiles away. Do you dare [drive] the car or [walk]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"drive"===r?(t.print("\nYou get into the car.\n"),new w):("walk"===r?(t.print("\nYou hurt your leg. You cant walk that far.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class Y{getName(e){return"Front Door of a Hospital"}getDescription(e){return"You have made it to the front door of a hospital.\nYou can see people [talking] inside of the hospital.\nInside you see many [beds]. The [car] can bring you back to the street."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("talking"===r)return t.print("You open the front door...\n"),new m;if("bed"===r&&t.hasDoctor)!1===t.hasBed?(t.print("The there are no open beds\n"),t.sleep(1),t.print("You talk to a doctor to bring you to a room\n"),t.sleep(1),t.print("Inside, you find a bed!\n"),t.hasBed=!0):t.print("You lay in bed but your leg still hurts.\n");else if("bed"!==r||t.hasDoctor){if("car"===r)return t.print("You head back toward the front door.\n"),new v;t.print("Invalid command!\n")}else t.print("Doctors are busy.\n");return n})()}}class b extends n{constructor(){super(...arguments),this.look=0,this.strength=0,this.hasKey=!1,this.hasPill=!1,this.hasBed=!1,this.hasDoctor=!1}getName(){return"Hospital Leg"}getAuthor(){return"Brooklin Laird"}getDescription(){return"Can you fix your hurt leg?"}onStart(){var e=this;return t(function*(){return e.print("\n                           A text adventure by Brooklin Laird\n"),e.sleep(.5),e.print("\nYou hurt your leg and cant move much you need to get to the hospital now.\n\n"),e.sleep(.5),e.print("You look down and your leg is broken\n\n"),e.sleep(.5),e.print("You see a hospital in the distance\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new Y})()}}const k=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new l),e.push(new b),e}getAdventure(){return new b}};class I{constructor(e){this.TYPE="PrintMessage",this.message=e}}class T{constructor(){this.TYPE="PickAdventureMessage"}}const D=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,i="assets/"+e;o.addEventListener("load",a=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${i}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",i),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new I(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=k.SINGLE_ADVENTURE_MODE?k.getAdventure():k.getAdventures()[e.index];t.setEngine(D),console.log("Starting PrintThread."),D.startPrintThread(),console.log("Starting adventure."),t.run(),k.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new T))}else"InputMessage"==e.TYPE?D.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();
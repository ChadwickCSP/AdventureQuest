!function(){"use strict";function e(e,t,n,r,o,a,i){try{var s=e[a](i),u=s.value}catch(h){return void n(h)}s.done?t(u):Promise.resolve(u).then(r,o)}function t(t){return function(){var n=this,r=arguments;return new Promise(function(o,a){var i=t.apply(n,r);function s(t){e(i,o,a,s,u,"next",t)}function u(t){e(i,o,a,s,u,"throw",t)}s(void 0)})}}class n{constructor(){this._gameWon=!1,this._gameLost=!1}print(e,t){this.engine.print(e,t)}printTextFile(e,n){var r=this;return t(function*(){console.log("Printing: "+e),yield r.engine.printFile(e,n)})()}sleep(e){this.engine.sleep(e)}getInput(){var e=this;return t(function*(){const t=yield e.engine.getInput();return e.print(`\n> ${t}\n`),t})()}DisplayRoomName(){const e=this.room.getName(this);let t=" |",n="=-";for(let o=0;o<e.length;o++)n+=o%2==0?"=":"-";e.length%2==1?n+="-=":(n+="=-=",t="  |");let r="| "+e+t;this.print("\n"+n+"\n"),this.print(r+"\n"),this.print(n+"\n\n")}setEngine(e){this.engine=e}gameOver(){this._gameLost=!0}gameWon(){this._gameWon=!0}onFinish(){this.run()}run(){var e=this;return t(function*(){for(e._gameWon=!1,e._gameLost=!1,e.room=yield e.onStart();!e._gameWon&&!e._gameLost;)e.DisplayRoomName(),yield e.sleep(.5),e.print(e.room.getDescription(e)+"\n"),e.room=yield e.room.handleInput(e);e._gameWon?(e.print("\nCongratulations, you won!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()):e._gameLost&&(e.print("\nGame Over!\n\n"),e.print("\nPress Enter to Continue...\n"),yield e.getInput()),e.onFinish()})()}}class r{getName(e){return"A Dead End"}getDescription(e){return"You are at a dead end. There is a large [boulder] here. A path leads [back] to\nthe mouth of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("boulder"===r&&t.strength<10)t.print("You try to lift the boulder but you're too weak!\n");else if("boulder"===r&&t.strength>=10)t.print("You lift the boulder with ease!\n"),t.hasKey?t.print("Now you're just showing off.\n"):(t.print("Beneath the boulder, you find a key.\n"),t.print("You take the key and place it in your pocket!\n"),t.hasKey=!0);else{if("back"===r)return t.print("You return to the Mouth of the Cave\n"),new u;t.print("Invalid command!\n")}return n})()}}class o{getName(e){return"Ye Olde Gym"}getDescription(e){return"You are in a gym filled with exercise equipment. A sign on the wall reads, 'Ye\nOlde Gym'. It appears all of the equipment is in use except for some [weights].\nOn the far wall is an [elevator]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("weights"===r&&t.strength<10)t.print("You pick up the weights and do a rep!\n"),t.strength=t.strength+6,t.sleep(1),t.print(`Your strength is now ${t.strength}\n`);else if("weights"===r&&t.strength>=10)t.print("You're feeling pretty strong already, maybe you could go lift some boulders!\n");else{if("elevator"===r)return t.print("You enter the elevator and begin to ascend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The door opens and you step out into the cave.\n"),new s;t.print("Invalid command!\n")}return n})()}}class a{getName(e){return"The Dragon's Lair"}getDescription(e){return"You are standing inside of a dragon's lair! The air is hot and dank. A tunnel\nleads [back] the way you came. In the center of the room is a massive pile of\ngold atop which a massive red dragon slumbers. Probably best not to [wake] the\ndragon. If you could [slay] it, you would be a hero!"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("You head back the way you came.\n"),new i):("wake"===r?(t.print("You wake the dragon...\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()):"slay"===r&&t.hasSword?(t.print("You draw your sword to slay the dragon.\n"),t.sleep(1),t.print("With your sword in hand, you sneak up to the dragon and drive it into the\nbeast's heart. The evil dragon winces as it realizes its reign of terror is\nover. Congratulations, you are a hero!"),t.gameWon()):"slay"!==r||t.hasSword?t.print("Invalid command!\n"):(t.print("You attempt to pummel the dragon with your fists!\n"),t.sleep(1),t.print("The dragon wakes and snarls, 'Who disturbs my slumber!?' It glares at you with\ndisdain and smiles crookedly before devouring you. The dragon lets out a\nsatisfying belch before closing its eyes and drifting back to sleep."),t.gameOver()),n)})()}}class i{getName(e){return"A Large Natural Cave"}getDescription(e){return"You are in a large natural room within a cave. It is unnaturally warm here and\nyou can hear what sounds like a giant creature [snoring] around a corner. In the\ncenter of the room is a [chest]. A [tunnel] leads back toward the mouth of the\ncave."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("snoring"===r)return t.print("You slowly approach the snoring...\n"),new a;if("chest"===r&&t.hasKey)!1===t.hasSword?(t.print("The chest is locked.\n"),t.sleep(1),t.print("You take the key from your pocket and unlock the chest.\n"),t.sleep(1),t.print("Inside, you find a beautiful sword!\n"),t.hasSword=!0):t.print("You search the chest again, but it is empty.\n");else if("chest"!==r||t.hasKey){if("tunnel"===r)return t.print("You head back toward the mouth of the cave.\n"),new s;t.print("Invalid command!\n")}else t.print("The chest is locked!\n");return n})()}}class s{getName(e){return"A Long Winding Tunnel"}getDescription(e){return"You are in a long winding tunnel. It is pitch black except for the beam emitting\nfrom your flashlight. You notice a [button] on the wall here. In one direction,\nthe tunnel leads to the [mouth] of the cave. In the other, the [tunnel]\ncontinues."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"button"===r?(t.print("You press the button and wait."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("DING! The wall next to the button opens revealing an elevator!\n"),t.print("Entering the elevator, you begin to descend."),t.sleep(1),t.print("."),t.sleep(1),t.print(".\n"),t.sleep(1),t.print("The elevator door opens and you exit.\n"),new o):"tunnel"===r?(t.print("You continue down the tunnel.\n"),new i):"mouth"===r?(t.print("You return to the mouth of the cave.\n"),new u):(e.print("Invalid command!\n"),n)})()}}class u{getName(e){return"The Mouth of the Cave"}getDescription(e){return"You are at the mouth of the cave. It is dark and damp. Luckily, you brought your\ntrusty flashlight with you! You can see two paths here. One leads to the [left]\nand the other leads to the [right]. You can also see the [entrance] of the cave."}handleInput(e){var n=this;return t(function*(){const t=e,o=(yield t.getInput()).toLowerCase().trim();return"right"===o?(t.print("You take the path to the right.\n"),new s):"left"===o?(t.print("You take the path to the left.\n"),new r):"entrance"===o?(t.print("On second thought, you return to the entrance.\n"),new h):(t.print("Invalid Command!\n"),n)})()}}class h{getName(e){return"Cave Entrance"}getDescription(e){return"You stand before a cave. It is well known that an evil dragon slumbers here.\nFrom time to time, the dragon wakes to terrorize the nearby villages and steal\ntheir gold. Dare you [enter] the cave in search of riches? Or would you rather\n[run] home to the comfort of your warm bed?"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"enter"===r?(t.print("You enter the cave.\n"),new u):("run"===r?(t.print("Scared of the dragon, you run home to your bed where fall asleep.\n"),t.gameOver()):t.print("Invalid command!"),n)})()}}class l extends n{constructor(){super(...arguments),this.hasKey=!1,this.hasSword=!1,this.strength=0}getName(){return"The Dragon's Lair"}getAuthor(){return"Joseph Collard"}getDescription(){return"Description"}onStart(){var e=this;return t(function*(){return e.strength=0,e.hasKey=!1,e.hasSword=!1,yield e.printTextFile("dragonsLair/title.txt"),e.print("\n                           A text adventure by Joseph Collard\n"),e.sleep(.5),new h})()}}class d{getName(e){return"Broken Escalator"}getDescription(e){return"You are standing on a broken escalator. There is a [goat] here blocking your \nway forward. The steps of the escalator lead [back] to the subway platform."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"back"===r?(t.print("\nSeeing no way forward, you return to the subway platform"),new c):("goat"===r?(t.print("\nThere is an angry looking goat blocking the escalator"),t.print("\nThe goat looks very [hungry]. BAAAA\n"),!0===t.isGoatOnFire&&t.print("\nThe goat is on [fire]\n")):"fire"===r&&!0===t.isGoatOnFire?!0===t.hasSpryte&&(t.print("\nYou take the spryte from your pocket and pour it over the goat. The flames go out."),(t.isGoatOnFire=!1)&&t.print("\nYep! Thats a fire.\n")):"fire"===r&&!1===t.isGoatOnFire?t.print("\nNo fire here!\n"):"hungry"===r&&!0===t.isGoatOnFire?t.print("\nThe goat is on fire. Perhaps you should find a way to put it out.\n"):"hungry"===r&&!1===t.isGoatOnFire?(t.print("\n The goat looks quite hungry. You hand it an empty Spryte can. The goat crunches through\nit in a matter of seconds. It 'BAAAAS' happily before hopping away. You continue up the broken escalator and return home.\nDid that really happen?\n"),t.gameWon(),t.print("\nYOU WON!!!\n")):t.print("\nInvalid command\n"),n)})()}}class c{getName(e){return"Subway Platform"}getDescription(e){return"You are standing on the subway platform. There is a broken [escalator] here\nand a vending [machine]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("escalator"===r)t.print("\nIt's broken. You'll have to [walk] up it.\n");else{if("walk"===r)return t.print("\nYou start to walk up the escalator.\n"),new d;"machine"===r?t.print("\nOh wow! It's one of those cool new Spryte machines. It has a [coin] slot.\n"):"coin"===r&&!1===t.hasSpryte?(t.print("\nYou drop 4 coins into the vending machine. You hear a loud whirring sound followed by a loud\n*KA CHUNCK*. You reach down and pickup a Spryte\n"),t.hasSpryte=!0):t.print("coin"===r&&!0===t.hasSpryte?"\nYou already have a Spryte\n":"\nInvalid Command\n")}return n})()}}class p extends n{constructor(){super(...arguments),this.isGoatOnFire=!0,this.hasSpryte=!1}getName(){return"Flaming Goat"}getAuthor(){return"Goat Man Jones"}getDescription(){return"Can you pass the Goat's challenge?"}onStart(){var e=this;return t(function*(){return e.isGoatOnFire=!0,e.hasSpryte=!1,yield e.printTextFile("FlamingGoat/title.txt"),e.print("\n                           A text adventure by Goat Man Jones\n"),e.sleep(.5),e.print("\nAfter a long day, you are the lone passenger on a subway training heading toward home.\n\n"),e.sleep(.5),e.print("It slows as it approaches your stop.\n\n"),e.sleep(.5),e.print("The doors open and you step out onto an empty platform.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new c})()}}class g{getName(e){return"Open Field"}getDescription(e){return"\nThis is a wide open field, this would be the ideal space for [building]. You look around, there is not much to see. You see a [dock] that you can look at, or you can [return] to the crashsite.\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"dock"===r?(t.print("\nYou decide to check out the dock that you see by the riverbed. Perhaps you can launch a raft from the dock!\n"),new f):"return"===r?(t.print("\nThere isn't much to see here, so you just head back to the crash site.\n"),new Y):("building"===r&&!0===t.hasRaftSupplies?(t.print("\nIf you have all of your supplies, and you can build your raft now!\n"),t.hasRaft=!0):t.print("building"===r&&!1===t.hasRaftSupplies?"\nYou need to get some wood and a sail to make your raft sucessfull, make sure you have both!\n":"\n!!Invalid Command!!\n"),n)})()}}class f{getName(e){return"Dock"}getDescription(e){return"You approach the dock and see that it is gaurded by another [zebra]! This looks like the best blace to [launch] your raft to get home. You can go back and get your raft from the [field] if you built it!\n"}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("zebra"===r&&!1===t.hasFur)t.print("\nOUCH! The zebra kicks you! You notice that he has a blindfold... How could he see you? Zebras have a good sense of smell,\nand you are a new scent, you should find something that smells like another zebra.\n"),t.hasBucket=!0;else if("zebra"===r&&!0===t.hasFur)t.print("\nYou approach the zebra and it lets you pass with ease. You can now launch your raft if you have it!\n");else if("launch"===r&&!1===t.hasRaft)t.print("\nYou can't launch something that you don't have! Go back to the field and get it so you can leave this place!\n");else if("launch"===r&&!0===t.hasRaft)t.print("\nYou place your raft next to the dock and hop in. It imedately catches the wind and you wave goodbye to your zebra friends for good.\n"),t.gameWon(),t.print("You sail away and don't look back. Congragulations!! You sucessfully got home!");else{if("field"===r)return t.print("\nYou decide to go back and grab your raft if you made it at the field!\n"),new g;t.print("\n!!Invalid Command!!\n")}return n})()}}class y{getName(e){return"Cave"}getDescription(e){return"You enter the cave and see tons of random things. One thing that catches your eye is the\n[sail] that is still in tact in the middle of the room. The zebra mentions that there is a\n[dock] that should help you be on your way home. Or you can go [back] to the entrence\nof the Zebra Sanctuary."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("sail"===r)t.print("\nYou decide to take the sail. The zebra advises you to go to the dock when you make your\nway home, but gives you a special clip of its hair it says it will be necessary later on.\n"),t.hasFur=!0;else{if("dock"===r)return t.print("\nYou decide to head to the dock that the zebra was talking about and check it out.\n"),new f;if("back"===r)return t.print("\nYou decide to head back to the Zebra Sanctuary and scope out more things.\n"),new m;t.print("\n!!Invalid Command!!\n")}return n})()}}class m{getName(e){return"Zebra Sanctuary"}getDescription(e){return'You come across a zebra, and he looks angry. It lets out a big "NEIIIIGH I want BERRIES!"\nYou should feed it [berries] ASAP. Behind it you see a [cave] and a [forest].'}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("berries"===r&&!1===t.hasMagicBerries)return t.print("\nMaybe there are some berries back at the berry field in front of the crash site! You could feed the zebra with those.\n"),new w;if("berries"===r&&!0===t.hasMagicBerries)t.print("\nYou pull out the berries that you saved, and feed them to the zebra\n"),t.isFed=!0,t.print("\nThe zebra lets out a lout burp and says, thank you. Do you need help finding your way\nhome? You don't look like you're from around here. I have some things in my cave that\nmight help.\n");else if("cave"===r&&!1===t.isFed)t.print("\nOUCH!! The zebra bit you! Looks like you cannot pass without feeding it. You should do that asap!\n");else{if("cave"===r&&!0===t.isFed)return t.print("\nThe zebra says: 'thanks for the food! Looks like you need help. I have some human\nstuff that I find in the river in this cave, there's probably something in here for\nyou, I owe you.'\n"),new y;t.print("forest"===r?"\nYou leave the zebra sanctuary and check out the forest that is right next to you.\n":"\n!!Invalid Command!!\n")}return n})()}}class w{getName(e){return"Berry Field"}getDescription(e){return"You were right, there are [berries]! You're not able to identify them yet, so be\ncareful! You can either [return] to the crash site or check out that weird looking\n[structure] thats nearby."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("berries"===r)t.print("\nThe berries look edible, but you want to be careful, so you just store some in your pocket in case\n"),t.hasMagicBerries=!0;else{if("structure"===r)return t.print("\nThat's a weird looking structure, it almost looks like someone's house. Maybe there's someone\nelse that can help you!\n"),new m;if("return"===r)return t.print("\nYou return to the crash site.\n"),new Y;t.print("\n!!Invalid command!!\n")}return n})()}}class b{getName(e){return"Galley"}getDescription(e){return!0===e.isPlaneOnFire?"The galley is on [fire]. You see a [bar] behind the flames. You should [return] to the crash\nsite to find something to put it out. ":"The fire is out. You can grab the [bar] now and then [return] to the crash site."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("fire"===r&&!1===t.isBucketFilled)t.printTextFile("ZebraTerritory/flames.txt"),t.print("\nYou have to put the fire out!! Is there water nearby? Maybe there's a bucket for water in\nthe equipment room...\n");else if("fire"===r&&!0===t.isBucketFilled)t.print("\nYou pour the water on the fire and watch the fire die. Phew, that was a close one. Now you\ncan find food!\n"),t.isPlaneOnFire=!1;else if("bar"===r&&!0===t.isPlaneOnFire)t.print("\nOuch! The fire is burning you and you can't reach the food! You need to put the fire out\nbefore you can get to the food.\n");else if("bar"===r&&!1===t.isPlaneOnFire)t.print("\nYou reach the food carts and find a protein bar! You rip open the bar and almost swallow the\nwhole bar full! Now you feel nourished and rejuveated.\n");else{if("return"===r)return t.print("\nYou return to the crash site\n"),new Y;t.print("\n!!Invalid command!!\n")}return n})()}}class v{getName(e){return"Riverbed"}getDescription(e){return"Running water!! This is a relif. This is helpful, you should use it to put the\nfire [out]. You should go [back] and find a bucket if you dont have it and [fill]\nit up."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("back"===r&&!1===t.hasBucket)return t.print("\nGood idea, if you get the bucket and fill it up, you could put out the fire!\n"),new k;if("back"===r&&!0===t.hasBucket)t.print("\nYou already have a bucket! You should fill it up and put the fire out.\n");else{if("out"===r)return t.print("\nGood idea, you should go put out the fire in the galley.\n"),new b;if("fill"===r&&!0===t.isBucketFilled)t.print("\nYou already filled the bucket up! You should go use the water to put the fire out.\n");else if("fill"===r&&!1===t.isBucketFilled)t.print("\nYou fill up the bucket with water. Now you should put the fire out!\n"),t.isBucketFilled=!0;else{if("return"===r)return new Y;t.print("\n!!Invalid Command!!\n")}}return n})()}}class k{getName(e){return"Equipment Room"}getDescription(e){return"You enter the Equipment Room and find a few things like an [axe] and a [bucket]. \n You also hear rushing water, perhaps there is a [riverbed] nearby.\nOr you can just [return] to the crash site."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();if("bucket"===r&&!1===t.hasBucket)t.print("\nThis could be useful for putting out a fire... Perhaps you should find some water."),t.hasBucket=!0;else if("bucket"===r&&!0===t.hasBucket)t.print("\nYou already have a bucket! You should fill it up and put the fire out.\n");else if("axe"===r&&!1===t.hasAxe)t.print("\nThis could be useful for cutting down trees...\n"),t.hasAxe=!0;else if("bucket"===r&&!0===t.hasAxe)t.print("\nYou already have the axe! You should go cut some wood\n");else{if("riverbed"===r)return t.print("\nYou hear water running and wonder where it is coming from. You check it out\n"),new v;if("return"===r)return new Y;t.print("\n!!Invalid Command!!\n")}return n})()}}class Y{getName(e){return"Crash Site"}getDescription(e){return"You wake up at the Crash Site. You decide you should either [explore] and \nfind a way home, find food becuase you are [hungry] or find some [equipment]."}handleInput(e){var n=this;return t(function*(){const t=e,r=(yield t.getInput()).toLowerCase().trim();return"explore"===r?(t.print("\n You exit the crash site and some type of berries catch your eye. FOOD! \n You decide to check it out.\n"),new w):"hungry"===r?(t.print("\n You hear your stomach grumble. You're feeling hungry and low energy after the crash. \n You think: there's got to be some food here somewhere \n"),new b):"equipment"===r?(t.print("\n Maybe there is something that can help you find your way home... There is probably \n something in the emergency equipment room. \n"),new k):(t.print("\n!!Invalid command!!\n"),n)})()}}class I extends n{constructor(){super(...arguments),this.hasBucket=!1,this.isBucketFilled=!1,this.isPlaneOnFire=!0,this.hasProteinBar=!1,this.hasMagicBerries=!1,this.hasAxe=!1,this.isFed=!1,this.hasFur=!1,this.hasRaftSupplies=!1,this.hasRaft=!1}getName(){return"Zebra Territory"}getAuthor(){return"Jerry the Zebra"}getDescription(){return"Can you figure out how to get home??"}onStart(){var e=this;return t(function*(){return e.hasBucket=!1,e.isBucketFilled=!1,yield e.printTextFile("ZebraTerritory/title.txt"),e.print("\n                           A text adventure by Jerry the Zebra\n"),e.sleep(.5),e.print("\nAfter major turbulance and engine failure, you wake up in the crash site.\n\n"),e.sleep(.5),e.print("Your vision is hazy and you are still in shock.\n\n"),e.sleep(.5),e.print("When your vision finally clears, you see the remains of the plane, and that you are\nthe only survivor.\n\n"),e.sleep(.5),e.print("Press Enter to Continue..."),yield e.getInput(),new Y})()}}const T=new class{constructor(){this.SINGLE_ADVENTURE_MODE=!0}getAdventures(){const e=[];return e.push(new l),e.push(new p),e}getAdventure(){return new I}};class C{constructor(e){this.TYPE="PrintMessage",this.message=e}}class A{constructor(){this.TYPE="PickAdventureMessage"}}const S=new class{constructor(){this.fileCache=new Map,this.inputQueue=[],this.printQueue=[]}threadSleep(e){var n=this;return t(function*(){if(0==n.printQueue.length)return new Promise(t=>setTimeout(t,1e3*e));const t=n.printQueue[n.printQueue.length-1].renderAfter-(new Date).getTime()+1e3*e;return new Promise(e=>setTimeout(e,t))})()}sleep(e){const t=this.getStartTime()+1e3*e;this.printQueue.push({message:"",renderAfter:t})}getInput(){var e=this;return t(function*(){for(;0==e.inputQueue.length;)yield e.threadSleep(.1);const t=e.inputQueue.shift();return Promise.resolve(t)})()}getStartTime(){return 0==this.printQueue.length?(new Date).getTime():this.printQueue[this.printQueue.length-1].renderAfter}print(e,t=.01){const n=1e3*t;let r=this.getStartTime();for(let o=0;o<e.length;o++)r+=n,this.printQueue.push({message:e[o],renderAfter:r})}printLines(e,t){const n=1e3*t;let r=this.getStartTime();e.forEach(e=>{r+=n,this.printQueue.push({message:e+"\n",renderAfter:r})})}printFile(e,n=.1){var r=this;return t(function*(){return new Promise(t=>{if(r.fileCache.has(e)){const o=r.fileCache.get(e);return r.printLines(o,n),void t()}const o=new XMLHttpRequest,a="assets/"+e;o.addEventListener("load",i=>{let s=[];o.status>=200&&o.status<300?s=o.responseText.split("\n"):(s=[`Could not load file: "${e}". Error Code: ${o.status} - ${o.statusText}`],console.error(`Could not load: ${a}`)),r.fileCache.set(e,s),r.printLines(s,n),t()}),o.open("GET",a),o.send()})})()}startPrintThread(){var e=this;return t(function*(){for(;;){for(;0==e.printQueue.length;)yield e.threadSleep(.1);const t=(new Date).getTime();for(;e.printQueue.length>0&&e.printQueue[0].renderAfter<=t;){const t=e.printQueue.shift();postMessage(new C(t.message))}}})()}pushInput(e){this.inputQueue.push(e.message)}};addEventListener("message",({data:e})=>{if("RunAdventureMessage"===e.TYPE){let t=T.SINGLE_ADVENTURE_MODE?T.getAdventure():T.getAdventures()[e.index];t.setEngine(S),console.log("Starting PrintThread."),S.startPrintThread(),console.log("Starting adventure."),t.run(),T.SINGLE_ADVENTURE_MODE||(t.onFinish=()=>postMessage(new A))}else"InputMessage"==e.TYPE?S.pushInput(e):(console.error("An illegal message was received by the engine: "),console.error(e))})}();